(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S''
p6
sS'0RAT'
p7
g6
sS'0DIS'
p8
g6
sS'0DIR'
p9
g6
sS'1VOL'
p10
g6
sS'1DIR'
p11
g6
sS'1DIS'
p12
g6
sS'1RAT'
p13
g6
sS'0DIA'
p14
g6
sS'0VOL'
p15
g6
ssS'stim_log'
p16
(dp17
sS'trialdata'
p18
(dp19
I0
(dp20
S'onset'
p21
cnumpy.core.multiarray
scalar
p22
(cnumpy
dtype
p23
(S'f8'
p24
I0
I1
tp25
Rp26
(I3
S'<'
p27
NNNI-1
I-1
I0
tp28
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p29
tp30
Rp31
sS'dis'
p32
(lp33
g6
ag6
assI1
(dp34
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00$@'
p35
tp36
Rp37
sg32
(lp38
g6
ag6
asssS'simulated_response'
p39
I00
sS'script'
p40
(lp41
S'"""\n'
p42
aS'deliver juice\n'
p43
aS'"""\n'
p44
aS'\n'
p45
aS'import numpy as N\n'
p46
aS'import syringe_pump\n'
p47
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p48
aS'import sys,os\n'
p49
aS'import socket\n'
p50
aS'from socket import gethostname\n'
p51
aS'import inspect\n'
p52
aS"sys.path.append('/Applications/liquid/psychtask/')\n"
p53
ag45
aS'import exptutils\n'
p54
aS'from exptutils import *\n'
p55
ag45
aS'import datetime\n'
p56
ag45
aS'def store_scriptfile():\n'
p57
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p58
aS'    f=open(scriptfile)\n'
p59
aS'    script=f.readlines()\n'
p60
aS'    f.close()\n'
p61
aS'    return script\n'
p62
ag45
aS'def check_for_quit(subdata,win):\n'
p63
aS'    k=event.getKeys()\n'
p64
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p65
aS"    print 'found:',k\n"
p66
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p67
aS"        print 'quit key pressed'\n"
p68
aS'        return True\n'
p69
aS'    else:\n'
p70
aS'        return False\n'
p71
ag45
aS'def wait_for_trigger():\n'
p72
aS'    event.clearEvents()\n'
p73
aS"    if subdata['simulated_response']:\n"
p74
aS'        msg="SIMULATION MODE"\n'
p75
aS'    else:\n'
p76
aS"        msg=''\n"
p77
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p78
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p79
aS"    alignHoriz='center',wrapWidth=50)\n"
p80
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p81
aS'    win.flip()\n'
p82
aS'    start=False\n'
p83
aS'    while start==False:\n'
p84
aS'        k=event.waitKeys()\n'
p85
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p86
aS'            start=True\n'
p87
aS"            message.setText('')#this clears the screen\n"
p88
aS'            win.flip()\n'
p89
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p90
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p91
aS'            return False\n'
p92
aS'    return True\n'
p93
ag45
aS'subdata={}\n'
p94
aS"subdata['subcode']='test'\n"
p95
aS'# initialize subdata dictionary to store info about the study\n'
p96
aS"subdata['completed']=0\n"
p97
aS"subdata['cwd']=os.getcwd()\n"
p98
aS"subdata['hostname']=socket.gethostname()\n"
p99
aS'clock=core.Clock()\n'
p100
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p101
aS"subdata['datestamp']=datestamp\n"
p102
aS"subdata['expt_title']='tampico_probabilistic'\n"
p103
aS"subdata['script']=store_scriptfile()\n"
p104
aS"subdata['response']={}\n"
p105
aS"subdata['score']={}\n"
p106
aS"subdata['rt']={}\n"
p107
aS"subdata['stim_onset_time']={}\n"
p108
aS"subdata['stim_log']={}\n"
p109
aS"subdata['is_this_SS_trial']={}\n"
p110
aS"subdata['SS']={}\n"
p111
aS"subdata['broke_on_trial']={}\n"
p112
ag45
aS"subdata['start_key']='5'\n"
p113
aS"subdata['quit_key']='q'\n"
p114
ag45
aS"subdata['simulated_response']=False\n"
p115
ag45
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p116
aS'logging.console.setLevel(logging.INFO)\n'
p117
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p118
ag45
ag45
aS'try:\n'
p119
aS"    print 'initializing serial device:'\n"
p120
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p121
aS'    print dev\n'
p122
aS"    print 'using serial device: ', dev\n"
p123
aS'    if not dev.isOpen():\n'
p124
aS"        raise Exception('noPump')\n"
p125
aS'    hasPump=True\n'
p126
aS'except:\n'
p127
aS'    hasPump=False\n'
p128
ag45
ag45
aS'#from new_era import PumpInterface\n'
p129
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p130
ag45
aS'# deliver 0.5 ml over 5 seconds\n'
p131
aS'# equates to\n'
p132
ag45
aS'diameter=26.59\n'
p133
aS'mls_to_deliver=0.5\n'
p134
aS'delivery_time=5.0\n'
p135
aS'cue_time=3.0\n'
p136
aS'rate = 0.5*(3600.0/5.0)  # mls/hour\n'
p137
ag45
aS"trialcond=N.zeros(24).astype('int')\n"
p138
ag45
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p139
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p140
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p141
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p142
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p143
aS'ntrials=len(trialcond)\n'
p144
aS'pump=N.zeros(ntrials)\n'
p145
ag45
aS'N.random.shuffle(trialcond)\n'
p146
ag45
aS'# pump zero is neutral, pump 1 is juice\n'
p147
ag45
aS'pump[trialcond==1]=1\n'
p148
aS'pump[trialcond==2]=1\n'
p149
ag45
aS'trial_length=10.0\n'
p150
ag45
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p151
ag45
ag45
aS'# clear infusion measurements\n'
p152
aS'if hasPump:\n'
p153
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p154
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p155
ag45
aS'    dev.setBaudrate(9600)\n'
p156
ag45
aS'    for cmd in commands_to_send:\n'
p157
aS"        print 'sending: ',cmd\n"
p158
aS'        dev.sendCmd(cmd)\n'
p159
aS'        core.wait(0.1)\n'
p160
ag45
aS"    subdata['pumpdata']={}\n"
p161
aS'    for p in [0,1]:\n'
p162
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p163
aS"            fullcmd='%d%s'%(p,cmd)\n"
p164
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p165
aS'            core.wait(0.1)\n'
p166
ag45
aS"    print subdata['pumpdata']\n"
p167
ag45
aS'# setup screen\n'
p168
ag45
aS'fullscr=False\n'
p169
ag45
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p170
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p171
ag45
aS'event.clearEvents()\n'
p172
aS'wt=wait_for_trigger()\n'
p173
aS'if not wt:\n'
p174
aS"    print 'quit button pressed!'\n"
p175
aS'    sys.exit()\n'
p176
aS'else:\n'
p177
aS'    print "quit status:",wt\n'
p178
aS'    \n'
p179
aS"message=visual.TextStim(win, text='')\n"
p180
ag45
aS"subdata['trialdata']={}\n"
p181
aS'clock.reset()\n'
p182
aS'event.clearEvents()\n'
p183
ag45
aS'for trial in range(ntrials):\n'
p184
aS'    if check_for_quit(subdata,win):\n'
p185
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p186
aS'        sys.exit()\n'
p187
ag45
aS'    trialdata={}\n'
p188
aS"    print 'trial %d'%trial\n"
p189
aS"    trialdata['onset']=onsets[trial]\n"
p190
aS"    print 'condition %d'%trialcond[trial]\n"
p191
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p192
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p193
aS'    visual_stim.draw()\n'
p194
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p195
aS'        if check_for_quit(subdata,win):\n'
p196
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p197
aS'            sys.exit()\n'
p198
aS'    win.flip()\n'
p199
ag45
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p200
aS'        pass\n'
p201
ag45
aS'    if hasPump:\n'
p202
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p203
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p204
aS'    else:\n'
p205
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p206
ag45
aS'    message.draw()\n'
p207
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p208
aS'        pass\n'
p209
aS'    win.flip()\n'
p210
aS'    if hasPump:\n'
p211
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p212
aS"    subdata['trialdata'][trial]=trialdata           \n"
p213
ag45
aS'win.close()\n'
p214
ag45
aS"#print dev.sendCmd('VER')\n"
p215
asS'SS'
p216
(dp217
sS'pumpver'
p218
g6
sS'completed'
p219
I0
sS'hostname'
p220
S'IRC-arizona'
p221
sS'quit_key'
p222
S'q'
p223
sS'stim_onset_time'
p224
(dp225
sS'response'
p226
(dp227
sS'is_this_SS_trial'
p228
(dp229
sS'subcode'
p230
S'test'
p231
sS'score'
p232
(dp233
sS'broke_on_trial'
p234
(dp235
sS'datestamp'
p236
S'2013-10-31-15_06_51'
p237
sS'start_key'
p238
S'5'
p239
sS'cwd'
p240
S'/Applications/liquid'
p241
sS'expt_title'
p242
S'tampico_probabilistic'
p243
s.