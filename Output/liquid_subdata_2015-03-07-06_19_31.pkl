(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S''
p6
sS'0RAT'
p7
g6
sS'0DIS'
p8
g6
sS'0DIR'
p9
g6
sS'1VOL'
p10
g6
sS'1DIR'
p11
g6
sS'1DIS'
p12
g6
sS'1RAT'
p13
g6
sS'0DIA'
p14
g6
sS'0VOL'
p15
g6
ssS'stim_log'
p16
(dp17
sS'trialdata'
p18
(dp19
I0
(dp20
S'onset'
p21
cnumpy.core.multiarray
scalar
p22
(cnumpy
dtype
p23
(S'f8'
p24
I0
I1
tp25
Rp26
(I3
S'<'
p27
NNNI-1
I-1
I0
tp28
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p29
tp30
Rp31
sS'dis'
p32
(lp33
g6
ag6
assI1
(dp34
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00$@'
p35
tp36
Rp37
sg32
(lp38
g6
ag6
assI2
(dp39
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x004@'
p40
tp41
Rp42
sg32
(lp43
g6
ag6
assI3
(dp44
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00>@'
p45
tp46
Rp47
sg32
(lp48
g6
ag6
assI4
(dp49
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00D@'
p50
tp51
Rp52
sg32
(lp53
g6
ag6
assI5
(dp54
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00I@'
p55
tp56
Rp57
sg32
(lp58
g6
ag6
assI6
(dp59
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00N@'
p60
tp61
Rp62
sg32
(lp63
g6
ag6
assI7
(dp64
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x80Q@'
p65
tp66
Rp67
sg32
(lp68
g6
ag6
assI8
(dp69
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00T@'
p70
tp71
Rp72
sg32
(lp73
g6
ag6
assI9
(dp74
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x80V@'
p75
tp76
Rp77
sg32
(lp78
g6
ag6
assI10
(dp79
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00Y@'
p80
tp81
Rp82
sg32
(lp83
g6
ag6
assI11
(dp84
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x80[@'
p85
tp86
Rp87
sg32
(lp88
g6
ag6
assI12
(dp89
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00^@'
p90
tp91
Rp92
sg32
(lp93
g6
ag6
assI13
(dp94
g21
g22
(g26
S'\x00\x00\x00\x00\x00@`@'
p95
tp96
Rp97
sg32
(lp98
g6
ag6
assI14
(dp99
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x80a@'
p100
tp101
Rp102
sg32
(lp103
g6
ag6
assI15
(dp104
g21
g22
(g26
S'\x00\x00\x00\x00\x00\xc0b@'
p105
tp106
Rp107
sg32
(lp108
g6
ag6
assI16
(dp109
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00d@'
p110
tp111
Rp112
sg32
(lp113
g6
ag6
assI17
(dp114
g21
g22
(g26
S'\x00\x00\x00\x00\x00@e@'
p115
tp116
Rp117
sg32
(lp118
g6
ag6
assI18
(dp119
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x80f@'
p120
tp121
Rp122
sg32
(lp123
g6
ag6
assI19
(dp124
g21
g22
(g26
S'\x00\x00\x00\x00\x00\xc0g@'
p125
tp126
Rp127
sg32
(lp128
g6
ag6
assI20
(dp129
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x00i@'
p130
tp131
Rp132
sg32
(lp133
g6
ag6
assI21
(dp134
g21
g22
(g26
S'\x00\x00\x00\x00\x00@j@'
p135
tp136
Rp137
sg32
(lp138
g6
ag6
assI22
(dp139
g21
g22
(g26
S'\x00\x00\x00\x00\x00\x80k@'
p140
tp141
Rp142
sg32
(lp143
g6
ag6
assI23
(dp144
g21
g22
(g26
S'\x00\x00\x00\x00\x00\xc0l@'
p145
tp146
Rp147
sg32
(lp148
g6
ag6
asssS'simulated_response'
p149
I00
sS'script'
p150
(lp151
S'"""\n'
p152
aS'deliver juice\n'
p153
aS'"""\n'
p154
aS'import psychopy.app\n'
p155
aS'import numpy as N\n'
p156
aS'import sys,os,pickle\n'
p157
aS'################################################\n'
p158
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p159
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p160
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p161
aS'\n'
p162
aS'import syringe_pump\n'
p163
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p164
ag162
aS'import socket\n'
p165
aS'from socket import gethostname\n'
p166
aS'import inspect\n'
p167
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p168
ag162
aS'import exptutils\n'
p169
aS'from exptutils import *\n'
p170
ag162
aS'import datetime\n'
p171
ag162
aS'def store_scriptfile():\n'
p172
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p173
aS'    f=open(scriptfile)\n'
p174
aS'    script=f.readlines()\n'
p175
aS'    f.close()\n'
p176
aS'    return script\n'
p177
ag162
aS'def check_for_quit(subdata,win):\n'
p178
aS'    k=event.getKeys()\n'
p179
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p180
aS"    print 'found:',k\n"
p181
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p182
aS"        print 'quit key pressed'\n"
p183
aS'        return True\n'
p184
aS'    else:\n'
p185
aS'        return False\n'
p186
ag162
aS'def wait_for_trigger():\n'
p187
aS'    event.clearEvents()\n'
p188
aS"    if subdata['simulated_response']:\n"
p189
aS'        msg="SIMULATION MODE"\n'
p190
aS'    else:\n'
p191
aS"        msg=''\n"
p192
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p193
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p194
aS"    alignHoriz='center',wrapWidth=50)\n"
p195
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p196
aS'    win.flip()\n'
p197
aS'    start=False\n'
p198
aS'    while start==False:\n'
p199
aS'        k=event.waitKeys()\n'
p200
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p201
aS'            start=True\n'
p202
aS"            message.setText('')#this clears the screen\n"
p203
aS'            win.flip()\n'
p204
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p205
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p206
aS'            return False\n'
p207
aS'    return True\n'
p208
ag162
aS'subdata={}\n'
p209
aS"#subdata['subcode']='test'\n"
p210
aS"subdata['subcode']=raw_input('subject id: ')\n"
p211
ag162
aS'# initialize subdata dictionary to store info about the study\n'
p212
aS"subdata['completed']=0\n"
p213
aS"subdata['cwd']=os.getcwd()\n"
p214
aS"subdata['hostname']=socket.gethostname()\n"
p215
aS'clock=core.Clock()\n'
p216
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p217
aS"subdata['datestamp']=datestamp\n"
p218
aS"subdata['expt_title']='tampico_probabilistic'\n"
p219
aS"subdata['script']=store_scriptfile()\n"
p220
aS"subdata['response']={}\n"
p221
aS"subdata['score']={}\n"
p222
aS"subdata['rt']={}\n"
p223
aS"subdata['stim_onset_time']={}\n"
p224
aS"subdata['stim_log']={}\n"
p225
aS"subdata['is_this_SS_trial']={}\n"
p226
aS"subdata['SS']={}\n"
p227
aS"subdata['broke_on_trial']={}\n"
p228
ag162
aS"subdata['start_key']='5'\n"
p229
aS"subdata['quit_key']='q'\n"
p230
ag162
aS"subdata['simulated_response']=False\n"
p231
ag162
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p232
aS'logging.console.setLevel(logging.INFO)\n'
p233
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p234
ag162
ag162
aS'try:\n'
p235
aS"    print 'initializing serial device:'\n"
p236
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p237
aS'    print dev\n'
p238
aS"    print 'using serial device: ', dev\n"
p239
aS'    if not dev.isOpen():\n'
p240
aS"        raise Exception('noPump')\n"
p241
aS'    hasPump=True\n'
p242
aS'except:\n'
p243
aS'    hasPump=False\n'
p244
ag162
ag162
aS'#from new_era import PumpInterface\n'
p245
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p246
ag162
aS'# deliver 0.5 ml over 5 seconds\n'
p247
aS'# equates to\n'
p248
ag162
aS'diameter=26.59\n'
p249
aS'mls_to_deliver=0.5\n'
p250
aS'delivery_time=2.0\n'
p251
aS'cue_time=2.0\n'
p252
aS'wait_time=2.0\n'
p253
aS'rinse_time=2.0\n'
p254
aS'swallow_time=2.0\n'
p255
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p256
ag162
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p257
ag162
aS"trialcond=N.zeros(24).astype('int')\n"
p258
ag162
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p259
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p260
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p261
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p262
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p263
aS'ntrials=len(trialcond)\n'
p264
aS'pump=N.zeros(ntrials)\n'
p265
ag162
aS'N.random.shuffle(trialcond)\n'
p266
ag162
aS'# pump zero is neutral, pump 1 is juice\n'
p267
ag162
aS'pump[trialcond==1]=1\n'
p268
aS'pump[trialcond==2]=1\n'
p269
ag162
ag162
ag162
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p270
ag162
ag162
aS'# clear infusion measurements\n'
p271
aS'if hasPump:\n'
p272
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p273
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p274
ag162
aS'    dev.setBaudrate(9600)\n'
p275
ag162
aS'    for cmd in commands_to_send:\n'
p276
aS"        print 'sending: ',cmd\n"
p277
aS'        dev.sendCmd(cmd)\n'
p278
aS'        core.wait(0.1)\n'
p279
ag162
aS"    subdata['pumpdata']={}\n"
p280
aS'    for p in [0,1]:\n'
p281
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p282
aS"            fullcmd='%d%s'%(p,cmd)\n"
p283
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p284
aS'            core.wait(0.1)\n'
p285
ag162
aS"    print subdata['pumpdata']\n"
p286
ag162
aS'# setup screen\n'
p287
ag162
aS'fullscr=False\n'
p288
ag162
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p289
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p290
ag162
aS'event.clearEvents()\n'
p291
aS'wt=wait_for_trigger()\n'
p292
aS'if not wt:\n'
p293
aS"    print 'quit button pressed!'\n"
p294
aS'    sys.exit()\n'
p295
aS'else:\n'
p296
aS'    print "quit status:",wt\n'
p297
aS'    \n'
p298
aS"message=visual.TextStim(win, text='')\n"
p299
ag162
aS"subdata['trialdata']={}\n"
p300
aS'clock.reset()\n'
p301
aS'event.clearEvents()\n'
p302
ag162
aS'for trial in range(ntrials):\n'
p303
aS'    if check_for_quit(subdata,win):\n'
p304
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p305
aS'        sys.exit()\n'
p306
ag162
aS'    trialdata={}\n'
p307
aS"    print 'trial %d'%trial\n"
p308
aS"    trialdata['onset']=onsets[trial]\n"
p309
aS"    print 'condition %d'%trialcond[trial]\n"
p310
aS"    logging.log(logging.DATA,'Condition: %d'%trialcond[trial])\n"
p311
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p312
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p313
aS'    visual_stim.draw()\n'
p314
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p315
aS'        if check_for_quit(subdata,win):\n'
p316
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p317
aS'            sys.exit()\n'
p318
aS'    win.flip()\n'
p319
ag162
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p320
aS'        pass\n'
p321
ag162
aS'    if hasPump:\n'
p322
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p323
aS"        logging.log(logging.DATA,'injecting via pump at address %d'%pump[trial])\n"
p324
ag162
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p325
aS'    else:\n'
p326
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p327
ag162
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p328
aS'        pass\n'
p329
aS"    message=visual.TextStim(win, text='')\n"
p330
aS'    message.draw()\n'
p331
aS'    win.flip()\n'
p332
aS'    if hasPump:\n'
p333
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p334
ag162
ag162
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p335
aS'        pass\n'
p336
ag162
aS'    if hasPump:\n'
p337
aS"        print 'injecting rinse via pump at address %d'%0\n"
p338
aS"        dev.sendCmd('%dRUN'%0)\n"
p339
aS'    else:\n'
p340
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p341
ag162
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p342
aS'        pass\n'
p343
ag162
aS"    message=visual.TextStim(win, text='swallow')\n"
p344
aS'    message.draw()\n'
p345
aS'    win.flip()\n'
p346
ag162
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p347
aS'        pass\n'
p348
aS"    message=visual.TextStim(win, text='')\n"
p349
aS'    message.draw()\n'
p350
aS'    win.flip()\n'
p351
ag162
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p352
aS'        pass\n'
p353
ag162
aS"    subdata['trialdata'][trial]=trialdata           \n"
p354
ag162
aS'win.close()\n'
p355
ag162
aS"#print dev.sendCmd('VER')\n"
p356
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p357
aS'pickle.dump(subdata,f)\n'
p358
aS'f.close()\n'
p359
asS'SS'
p360
(dp361
sS'pumpver'
p362
g6
sS'completed'
p363
I0
sS'hostname'
p364
S'wireless-10-145-185-12.public.utexas.edu'
p365
sS'quit_key'
p366
S'q'
p367
sS'stim_onset_time'
p368
(dp369
sS'response'
p370
(dp371
sS'is_this_SS_trial'
p372
(dp373
sS'subcode'
p374
S'testday'
p375
sS'score'
p376
(dp377
sS'broke_on_trial'
p378
(dp379
sS'datestamp'
p380
S'2015-03-07-06_19_31'
p381
sS'start_key'
p382
S'5'
p383
sS'cwd'
p384
S'/Users/imagining/Desktop/liquid_working'
p385
sS'expt_title'
p386
S'tampico_probabilistic'
p387
s.