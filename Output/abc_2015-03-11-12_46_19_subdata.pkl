(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200SI0.000W0.000ML\x03'
p43
aS'\x0201SI0.500W0.000ML\x03'
p44
asssS'simulated_response'
p45
I00
sS'script'
p46
(lp47
S'"""\n'
p48
aS'deliver juice\n'
p49
aS'"""\n'
p50
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p51
aS'import psychopy.app\n'
p52
aS'import numpy as N\n'
p53
aS'import sys,os,pickle\n'
p54
aS'################################################\n'
p55
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p56
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p57
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p58
aS'import cv2\n'
p59
aS'import syringe_pump\n'
p60
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p61
aS'\n'
p62
aS'import socket\n'
p63
aS'from socket import gethostname\n'
p64
aS'import inspect\n'
p65
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p66
ag62
aS'import exptutils\n'
p67
aS'from exptutils import *\n'
p68
ag62
aS'import datetime\n'
p69
ag62
aS'def store_scriptfile():\n'
p70
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p71
aS'    f=open(scriptfile)\n'
p72
aS'    script=f.readlines()\n'
p73
aS'    f.close()\n'
p74
aS'    return script\n'
p75
ag62
aS'def check_for_quit(subdata,win):\n'
p76
aS'    k=event.getKeys()\n'
p77
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p78
aS"    print 'found:',k\n"
p79
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p80
aS"        print 'quit key pressed'\n"
p81
aS'        return True\n'
p82
aS'    else:\n'
p83
aS'        return False\n'
p84
ag62
aS'def wait_for_trigger():\n'
p85
aS'    event.clearEvents()\n'
p86
aS"    if subdata['simulated_response']:\n"
p87
aS'        msg="SIMULATION MODE"\n'
p88
aS'    else:\n'
p89
aS"        msg=''\n"
p90
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p91
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p92
aS"    alignHoriz='center',wrapWidth=50)\n"
p93
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p94
aS'    win.flip()\n'
p95
aS'    start=False\n'
p96
aS'    while start==False:\n'
p97
aS'        k=event.waitKeys()\n'
p98
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p99
aS'            start=True\n'
p100
aS"            message.setText('')#this clears the screen\n"
p101
aS'            win.flip()\n'
p102
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p103
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p104
aS'            return False\n'
p105
aS'    return True\n'
p106
ag62
aS'subdata={}\n'
p107
aS"#subdata['subcode']='test'\n"
p108
aS"subdata['subcode']=raw_input('subject id: ')\n"
p109
ag62
aS'# initialize subdata dictionary to store info about the study\n'
p110
aS"subdata['completed']=0\n"
p111
aS"subdata['cwd']=os.getcwd()\n"
p112
aS"subdata['hostname']=socket.gethostname()\n"
p113
aS'clock=core.Clock()\n'
p114
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p115
aS"subdata['datestamp']=datestamp\n"
p116
aS"subdata['expt_title']='tampico_probabilistic'\n"
p117
aS"subdata['script']=store_scriptfile()\n"
p118
aS"subdata['response']={}\n"
p119
aS"subdata['score']={}\n"
p120
aS"subdata['rt']={}\n"
p121
aS"subdata['stim_onset_time']={}\n"
p122
aS"subdata['stim_log']={}\n"
p123
aS"subdata['is_this_SS_trial']={}\n"
p124
aS"subdata['SS']={}\n"
p125
aS"subdata['broke_on_trial']={}\n"
p126
ag62
aS"subdata['start_key']='5'\n"
p127
aS"subdata['quit_key']='q'\n"
p128
ag62
aS"subdata['simulated_response']=False\n"
p129
ag62
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p130
aS'logging.console.setLevel(logging.INFO)\n'
p131
aS'logfile=logging.LogFile(dataFileName,level=logging.DEBUG)\n'
p132
ag62
ag62
aS'try:\n'
p133
aS"    print 'initializing serial device:'\n"
p134
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p135
aS'    print dev\n'
p136
aS"    print 'using serial device: ', dev\n"
p137
aS'    if not dev.isOpen():\n'
p138
aS"        raise Exception('noPump')\n"
p139
aS'    hasPump=True\n'
p140
aS'except:\n'
p141
aS'    hasPump=False\n'
p142
ag62
ag62
aS'#from new_era import PumpInterface\n'
p143
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p144
ag62
aS'# deliver 0.5 ml over 5 seconds\n'
p145
aS'# equates to\n'
p146
ag62
aS'diameter=26.59\n'
p147
aS'mls_to_deliver=0.5\n'
p148
aS'delivery_time=2.0\n'
p149
aS'cue_time=2.0\n'
p150
aS'wait_time=2.0\n'
p151
aS'rinse_time=2.0\n'
p152
aS'swallow_time=2.0\n'
p153
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p154
ag62
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p155
ag62
aS"trialcond=N.zeros(24).astype('int')\n"
p156
ag62
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p157
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p158
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p159
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p160
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p161
aS'ntrials=len(trialcond)\n'
p162
aS'pump=N.zeros(ntrials)\n'
p163
ag62
aS'N.random.shuffle(trialcond)\n'
p164
ag62
aS'# pump zero is neutral, pump 1 is juice\n'
p165
ag62
aS'pump[trialcond==1]=1\n'
p166
aS'pump[trialcond==2]=1\n'
p167
ag62
ag62
ag62
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p168
ag62
ag62
aS'# clear infusion measurements\n'
p169
aS'if hasPump:\n'
p170
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p171
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p172
ag62
aS'    dev.setBaudrate(9600)\n'
p173
ag62
aS'    for cmd in commands_to_send:\n'
p174
aS"        print 'sending: ',cmd\n"
p175
aS'        dev.sendCmd(cmd)\n'
p176
aS'        core.wait(0.1)\n'
p177
ag62
aS"    subdata['pumpdata']={}\n"
p178
aS'    for p in [0,1]:\n'
p179
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p180
aS"            fullcmd='%d%s'%(p,cmd)\n"
p181
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p182
aS'            core.wait(0.1)\n'
p183
ag62
aS"    print subdata['pumpdata']\n"
p184
ag62
aS'# setup screen\n'
p185
ag62
aS'fullscr=False\n'
p186
ag62
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p187
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p188
ag62
aS'event.clearEvents()\n'
p189
aS'wt=wait_for_trigger()\n'
p190
aS'if not wt:\n'
p191
aS"    print 'quit button pressed!'\n"
p192
aS'    sys.exit()\n'
p193
aS'else:\n'
p194
aS'    print "quit status:",wt\n'
p195
aS'    \n'
p196
aS"message=visual.TextStim(win, text='')\n"
p197
ag62
aS"subdata['trialdata']={}\n"
p198
aS'clock.reset()\n'
p199
aS'event.clearEvents()\n'
p200
ag62
aS'for trial in range(ntrials):\n'
p201
aS'    if check_for_quit(subdata,win):\n'
p202
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p203
aS'        sys.exit()\n'
p204
ag62
aS'    trialdata={}\n'
p205
aS"    print 'trial %d'%trial\n"
p206
aS"    trialdata['onset']=onsets[trial]\n"
p207
aS"    print 'condition %d'%trialcond[trial]\n"
p208
aS"    logging.log(logging.DATA,'Condition: %d'%trialcond[trial])\n"
p209
aS"    logging.debug('debug output')\n"
p210
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p211
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p212
aS'    visual_stim.draw()\n'
p213
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p214
aS'        if check_for_quit(subdata,win):\n'
p215
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p216
aS'            sys.exit()\n'
p217
aS'    win.flip()\n'
p218
ag62
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p219
aS'        pass\n'
p220
ag62
aS'    if hasPump:\n'
p221
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p222
aS"        logging.log(logging.DATA,'injecting via pump at address %d'%pump[trial])\n"
p223
ag62
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p224
aS'    else:\n'
p225
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p226
ag62
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p227
aS'        pass\n'
p228
aS"    message=visual.TextStim(win, text='')\n"
p229
aS'    message.draw()\n'
p230
aS'    win.flip()\n'
p231
aS'    if hasPump:\n'
p232
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p233
ag62
ag62
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p234
aS'        pass\n'
p235
ag62
aS'    if hasPump:\n'
p236
aS"        print 'injecting rinse via pump at address %d'%0\n"
p237
aS"        dev.sendCmd('%dRUN'%0)\n"
p238
aS'    else:\n'
p239
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p240
ag62
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p241
aS'        pass\n'
p242
ag62
aS"    message=visual.TextStim(win, text='swallow')\n"
p243
aS'    message.draw()\n'
p244
aS'    win.flip()\n'
p245
ag62
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p246
aS'        pass\n'
p247
aS"    message=visual.TextStim(win, text='')\n"
p248
aS'    message.draw()\n'
p249
aS'    win.flip()\n'
p250
ag62
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p251
aS'        pass\n'
p252
ag62
aS"    subdata['trialdata'][trial]=trialdata           \n"
p253
ag62
aS'win.close()\n'
p254
ag62
aS"#print dev.sendCmd('VER')\n"
p255
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p256
aS'pickle.dump(subdata,f)\n'
p257
aS'f.close()\n'
p258
asS'SS'
p259
(dp260
sS'pumpver'
p261
S''
p262
sS'completed'
p263
I0
sS'hostname'
p264
S'wireless-10-145-25-130.public.utexas.edu'
p265
sS'quit_key'
p266
S'q'
p267
sS'stim_onset_time'
p268
(dp269
sS'response'
p270
(dp271
sS'is_this_SS_trial'
p272
(dp273
sS'subcode'
p274
S'abc'
p275
sS'score'
p276
(dp277
sS'broke_on_trial'
p278
(dp279
sS'datestamp'
p280
S'2015-03-11-12_46_19'
p281
sS'start_key'
p282
S'5'
p283
sS'cwd'
p284
S'/Users/imagining/Desktop/liquid_working'
p285
sS'expt_title'
p286
S'tampico_probabilistic'
p287
s.