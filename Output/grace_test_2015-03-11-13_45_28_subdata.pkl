(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200II0.487W0.000ML\x03'
p43
aS'\x0201SI0.000W0.000ML\x03'
p44
assI1
(dp45
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00$@'
p46
tp47
Rp48
sg41
(lp49
S'\x0200SI1.000W0.000ML\x03'
p50
aS'\x0201SI0.500W0.000ML\x03'
p51
assI2
(dp52
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x004@'
p53
tp54
Rp55
sg41
(lp56
S'\x0200SI1.500W0.000ML\x03'
p57
aS'\x0201SI1.000W0.000ML\x03'
p58
assI3
(dp59
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00>@'
p60
tp61
Rp62
sg41
(lp63
S'\x0200II2.485W0.000ML\x03'
p64
aS'\x0201SI1.000W0.000ML\x03'
p65
asssS'simulated_response'
p66
I00
sS'script'
p67
(lp68
S'"""\n'
p69
aS'deliver juice\n'
p70
aS'"""\n'
p71
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p72
aS'import psychopy.app\n'
p73
aS'import numpy as N\n'
p74
aS'import sys,os,pickle\n'
p75
aS'################################################\n'
p76
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p77
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p78
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p79
aS'import cv2\n'
p80
aS'import syringe_pump\n'
p81
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p82
aS'\n'
p83
aS'import socket\n'
p84
aS'from socket import gethostname\n'
p85
aS'import inspect\n'
p86
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p87
ag83
aS'import exptutils\n'
p88
aS'from exptutils import *\n'
p89
ag83
aS'import datetime\n'
p90
ag83
aS'def store_scriptfile():\n'
p91
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p92
aS'    f=open(scriptfile)\n'
p93
aS'    script=f.readlines()\n'
p94
aS'    f.close()\n'
p95
aS'    return script\n'
p96
ag83
aS'def check_for_quit(subdata,win):\n'
p97
aS'    k=event.getKeys()\n'
p98
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p99
aS"    print 'found:',k\n"
p100
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p101
aS"        print 'quit key pressed'\n"
p102
aS'        return True\n'
p103
aS'    else:\n'
p104
aS'        return False\n'
p105
ag83
aS'def wait_for_trigger():\n'
p106
aS'    event.clearEvents()\n'
p107
aS"    if subdata['simulated_response']:\n"
p108
aS'        msg="SIMULATION MODE"\n'
p109
aS'    else:\n'
p110
aS"        msg=''\n"
p111
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p112
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p113
aS"    alignHoriz='center',wrapWidth=50)\n"
p114
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p115
aS'    win.flip()\n'
p116
aS'    start=False\n'
p117
aS'    while start==False:\n'
p118
aS'        k=event.waitKeys()\n'
p119
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p120
aS'            start=True\n'
p121
aS"            message.setText('')#this clears the screen\n"
p122
aS'            win.flip()\n'
p123
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p124
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p125
aS'            return False\n'
p126
aS'    return True\n'
p127
ag83
aS'subdata={}\n'
p128
aS"#subdata['subcode']='test'\n"
p129
aS"subdata['subcode']=raw_input('subject id: ')\n"
p130
ag83
aS'# initialize subdata dictionary to store info about the study\n'
p131
aS"subdata['completed']=0\n"
p132
aS"subdata['cwd']=os.getcwd()\n"
p133
aS"subdata['hostname']=socket.gethostname()\n"
p134
aS'clock=core.Clock()\n'
p135
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p136
aS"subdata['datestamp']=datestamp\n"
p137
aS"subdata['expt_title']='tampico_probabilistic'\n"
p138
aS"subdata['script']=store_scriptfile()\n"
p139
aS"subdata['response']={}\n"
p140
aS"subdata['score']={}\n"
p141
aS"subdata['rt']={}\n"
p142
aS"subdata['stim_onset_time']={}\n"
p143
aS"subdata['stim_log']={}\n"
p144
aS"subdata['is_this_SS_trial']={}\n"
p145
aS"subdata['SS']={}\n"
p146
aS"subdata['broke_on_trial']={}\n"
p147
ag83
aS"subdata['start_key']='5'\n"
p148
aS"subdata['quit_key']='q'\n"
p149
ag83
aS"subdata['simulated_response']=False\n"
p150
ag83
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p151
aS'logging.console.setLevel(logging.INFO)\n'
p152
aS'logfile=logging.LogFile(dataFileName,level=logging.DATA)\n'
p153
ag83
ag83
aS'try:\n'
p154
aS"    print 'initializing serial device:'\n"
p155
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p156
aS'    print dev\n'
p157
aS"    print 'using serial device: ', dev\n"
p158
aS'    if not dev.isOpen():\n'
p159
aS"        raise Exception('noPump')\n"
p160
aS'    hasPump=True\n'
p161
aS'except:\n'
p162
aS'    hasPump=False\n'
p163
ag83
ag83
aS'#from new_era import PumpInterface\n'
p164
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p165
ag83
aS'# deliver 0.5 ml over 5 seconds\n'
p166
aS'# equates to\n'
p167
ag83
aS'diameter=26.59\n'
p168
aS'mls_to_deliver=0.5\n'
p169
aS'delivery_time=2.0\n'
p170
aS'cue_time=2.0\n'
p171
aS'wait_time=2.0\n'
p172
aS'rinse_time=2.0\n'
p173
aS'swallow_time=2.0\n'
p174
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p175
ag83
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p176
ag83
aS"trialcond=N.zeros(24).astype('int')\n"
p177
ag83
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p178
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p179
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p180
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p181
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p182
aS'ntrials=len(trialcond)\n'
p183
aS'pump=N.zeros(ntrials)\n'
p184
ag83
aS'N.random.shuffle(trialcond)\n'
p185
ag83
aS'# pump zero is neutral, pump 1 is juice\n'
p186
ag83
aS'pump[trialcond==1]=1\n'
p187
aS'pump[trialcond==2]=1\n'
p188
ag83
ag83
ag83
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p189
ag83
ag83
aS'# clear infusion measurements\n'
p190
aS'if hasPump:\n'
p191
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p192
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p193
ag83
aS'    dev.setBaudrate(9600)\n'
p194
ag83
aS'    for cmd in commands_to_send:\n'
p195
aS"        print 'sending: ',cmd\n"
p196
aS'        dev.sendCmd(cmd)\n'
p197
aS'        core.wait(0.1)\n'
p198
ag83
aS"    subdata['pumpdata']={}\n"
p199
aS'    for p in [0,1]:\n'
p200
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p201
aS"            fullcmd='%d%s'%(p,cmd)\n"
p202
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p203
aS'            core.wait(0.1)\n'
p204
ag83
aS"    print subdata['pumpdata']\n"
p205
ag83
aS'# setup screen\n'
p206
ag83
aS'fullscr=False\n'
p207
ag83
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p208
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p209
ag83
aS'event.clearEvents()\n'
p210
aS'wt=wait_for_trigger()\n'
p211
aS'if not wt:\n'
p212
aS"    print 'quit button pressed!'\n"
p213
aS'    sys.exit()\n'
p214
aS'else:\n'
p215
aS'    print "quit status:",wt\n'
p216
aS'    \n'
p217
aS"message=visual.TextStim(win, text='')\n"
p218
ag83
aS"subdata['trialdata']={}\n"
p219
aS'clock.reset()\n'
p220
aS'event.clearEvents()\n'
p221
ag83
aS'for trial in range(ntrials):\n'
p222
aS'    if check_for_quit(subdata,win):\n'
p223
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p224
aS'        sys.exit()\n'
p225
ag83
aS'    trialdata={}\n'
p226
aS"    print 'trial %d'%trial\n"
p227
aS"    trialdata['onset']=onsets[trial]\n"
p228
aS"    print 'condition %d'%trialcond[trial]\n"
p229
aS'    logging.log(logging.DATA,"Condition: %d"%trialcond[trial])\n'
p230
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p231
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p232
aS'    visual_stim.draw()\n'
p233
aS'    logging.log(logging.DATA, "image=%s"%stim_images[trialcond[trial]])\n'
p234
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p235
aS'        if check_for_quit(subdata,win):\n'
p236
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p237
aS'            sys.exit()\n'
p238
aS'    win.flip()\n'
p239
ag83
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p240
aS'        pass\n'
p241
ag83
aS'    if hasPump:\n'
p242
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p243
aS'        logging.log(logging.DATA,"injecting via pump at address %d"%pump[trial])\n'
p244
ag83
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p245
aS'    else:\n'
p246
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p247
ag83
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p248
aS'        pass\n'
p249
aS"    message=visual.TextStim(win, text='')\n"
p250
aS'    message.draw()\n'
p251
aS'    win.flip()\n'
p252
aS'    if hasPump:\n'
p253
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p254
ag83
ag83
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p255
aS'        pass\n'
p256
ag83
aS'    if hasPump:\n'
p257
aS"        print 'injecting rinse via pump at address %d'%0\n"
p258
aS"        dev.sendCmd('%dRUN'%0)\n"
p259
aS'    else:\n'
p260
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p261
ag83
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p262
aS'        pass\n'
p263
ag83
aS"    message=visual.TextStim(win, text='swallow')\n"
p264
aS'    message.draw()\n'
p265
aS'    win.flip()\n'
p266
ag83
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p267
aS'        pass\n'
p268
aS"    message=visual.TextStim(win, text='')\n"
p269
aS'    message.draw()\n'
p270
aS'    win.flip()\n'
p271
ag83
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p272
aS'        pass\n'
p273
ag83
aS"    subdata['trialdata'][trial]=trialdata           \n"
p274
ag83
aS'win.close()\n'
p275
ag83
aS"#print dev.sendCmd('VER')\n"
p276
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p277
aS'pickle.dump(subdata,f)\n'
p278
aS'f.close()\n'
p279
asS'SS'
p280
(dp281
sS'pumpver'
p282
S''
p283
sS'completed'
p284
I0
sS'hostname'
p285
S'wireless-10-145-25-130.public.utexas.edu'
p286
sS'quit_key'
p287
S'q'
p288
sS'stim_onset_time'
p289
(dp290
sS'response'
p291
(dp292
sS'is_this_SS_trial'
p293
(dp294
sS'subcode'
p295
S'grace_test'
p296
sS'score'
p297
(dp298
sS'broke_on_trial'
p299
(dp300
sS'datestamp'
p301
S'2015-03-11-13_45_28'
p302
sS'start_key'
p303
S'5'
p304
sS'cwd'
p305
S'/Users/imagining/Desktop/liquid_working'
p306
sS'expt_title'
p307
S'tampico_probabilistic'
p308
s.