(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200II0.487W0.000ML\x03'
p43
aS'\x0201SI0.000W0.000ML\x03'
p44
assI1
(dp45
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00$@'
p46
tp47
Rp48
sg41
(lp49
S'\x0200SI1.000W0.000ML\x03'
p50
aS'\x0201SI0.500W0.000ML\x03'
p51
assI2
(dp52
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x004@'
p53
tp54
Rp55
sg41
(lp56
S'\x0200SI1.500W0.000ML\x03'
p57
aS'\x0201SI1.000W0.000ML\x03'
p58
assI3
(dp59
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00>@'
p60
tp61
Rp62
sg41
(lp63
S'\x0200II2.488W0.000ML\x03'
p64
aS'\x0201SI1.000W0.000ML\x03'
p65
assI4
(dp66
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00D@'
p67
tp68
Rp69
sg41
(lp70
S'\x0200II3.486W0.000ML\x03'
p71
aS'\x0201SI1.000W0.000ML\x03'
p72
assI5
(dp73
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00I@'
p74
tp75
Rp76
sg41
(lp77
S'\x0200SI4.001W0.000ML\x03'
p78
aS'\x0201SI1.500W0.000ML\x03'
p79
assI6
(dp80
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00N@'
p81
tp82
Rp83
sg41
(lp84
S'\x0200II4.988W0.000ML\x03'
p85
aS'\x0201SI1.500W0.000ML\x03'
p86
assI7
(dp87
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80Q@'
p88
tp89
Rp90
sg41
(lp91
S'\x0200SI5.501W0.000ML\x03'
p92
aS'\x0201SI2.000W0.000ML\x03'
p93
assI8
(dp94
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00T@'
p95
tp96
Rp97
sg41
(lp98
S'\x0200SI6.001W0.000ML\x03'
p99
aS'\x0201SI2.500W0.000ML\x03'
p100
assI9
(dp101
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80V@'
p102
tp103
Rp104
sg41
(lp105
S'\x0200SI6.501W0.000ML\x03'
p106
aS'\x0201SI3.001W0.000ML\x03'
p107
assI10
(dp108
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00Y@'
p109
tp110
Rp111
sg41
(lp112
S'\x0200SI7.002W0.000ML\x03'
p113
aS'\x0201SI3.501W0.000ML\x03'
p114
assI11
(dp115
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80[@'
p116
tp117
Rp118
sg41
(lp119
S'\x0200II7.988W0.000ML\x03'
p120
aS'\x0201SI3.501W0.000ML\x03'
p121
assI12
(dp122
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00^@'
p123
tp124
Rp125
sg41
(lp126
S'\x0200II8.989W0.000ML\x03'
p127
aS'\x0201SI3.501W0.000ML\x03'
p128
assI13
(dp129
g30
g31
(g35
S'\x00\x00\x00\x00\x00@`@'
p130
tp131
Rp132
sg41
(lp133
S'\x0200SI9.502W0.000ML\x03'
p134
aS'\x0201SI4.001W0.000ML\x03'
p135
assI14
(dp136
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80a@'
p137
tp138
Rp139
sg41
(lp140
S'\x0200SI10.00W0.000ML\x03'
p141
aS'\x0201SI4.501W0.000ML\x03'
p142
assI15
(dp143
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0b@'
p144
tp145
Rp146
sg41
(lp147
S'\x0200II10.99W0.000ML\x03'
p148
aS'\x0201SI4.501W0.000ML\x03'
p149
assI16
(dp150
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00d@'
p151
tp152
Rp153
sg41
(lp154
S'\x0200II11.98W0.000ML\x03'
p155
aS'\x0201SI4.501W0.000ML\x03'
p156
assI17
(dp157
g30
g31
(g35
S'\x00\x00\x00\x00\x00@e@'
p158
tp159
Rp160
sg41
(lp161
S'\x0200SI12.50W0.000ML\x03'
p162
aS'\x0201SI5.001W0.000ML\x03'
p163
assI18
(dp164
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80f@'
p165
tp166
Rp167
sg41
(lp168
S''
p169
ag169
assI19
(dp170
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0g@'
p171
tp172
Rp173
sg41
(lp174
g169
ag169
assI20
(dp175
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00i@'
p176
tp177
Rp178
sg41
(lp179
g169
ag169
assI21
(dp180
g30
g31
(g35
S'\x00\x00\x00\x00\x00@j@'
p181
tp182
Rp183
sg41
(lp184
g169
ag169
assI22
(dp185
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80k@'
p186
tp187
Rp188
sg41
(lp189
g169
ag169
assI23
(dp190
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0l@'
p191
tp192
Rp193
sg41
(lp194
g169
ag169
asssS'simulated_response'
p195
I00
sS'script'
p196
(lp197
S'"""\n'
p198
aS'deliver juice\n'
p199
aS'"""\n'
p200
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p201
aS'import psychopy.app\n'
p202
aS'import numpy as N\n'
p203
aS'import sys,os,pickle\n'
p204
aS'################################################\n'
p205
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p206
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p207
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p208
aS'import cv2\n'
p209
aS'import syringe_pump\n'
p210
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p211
aS'\n'
p212
aS'import socket\n'
p213
aS'from socket import gethostname\n'
p214
aS'import inspect\n'
p215
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p216
ag212
aS'import exptutils\n'
p217
aS'from exptutils import *\n'
p218
ag212
aS'import datetime\n'
p219
ag212
aS'def store_scriptfile():\n'
p220
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p221
aS'    f=open(scriptfile)\n'
p222
aS'    script=f.readlines()\n'
p223
aS'    f.close()\n'
p224
aS'    return script\n'
p225
ag212
aS'def check_for_quit(subdata,win):\n'
p226
aS'    k=event.getKeys()\n'
p227
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p228
aS"    print 'found:',k\n"
p229
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p230
aS"        print 'quit key pressed'\n"
p231
aS'        return True\n'
p232
aS'    else:\n'
p233
aS'        return False\n'
p234
ag212
aS'def wait_for_trigger():\n'
p235
aS'    event.clearEvents()\n'
p236
aS"    if subdata['simulated_response']:\n"
p237
aS'        msg="SIMULATION MODE"\n'
p238
aS'    else:\n'
p239
aS"        msg=''\n"
p240
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p241
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p242
aS"    alignHoriz='center',wrapWidth=50)\n"
p243
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p244
aS'    win.flip()\n'
p245
aS'    start=False\n'
p246
aS'    while start==False:\n'
p247
aS'        k=event.waitKeys()\n'
p248
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p249
aS'            start=True\n'
p250
aS"            message.setText('')#this clears the screen\n"
p251
aS'            win.flip()\n'
p252
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p253
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p254
aS'            return False\n'
p255
aS'    return True\n'
p256
ag212
aS'subdata={}\n'
p257
aS"#subdata['subcode']='test'\n"
p258
aS"subdata['subcode']=raw_input('subject id: ')\n"
p259
ag212
aS'# initialize subdata dictionary to store info about the study\n'
p260
aS"subdata['completed']=0\n"
p261
aS"subdata['cwd']=os.getcwd()\n"
p262
aS"subdata['hostname']=socket.gethostname()\n"
p263
aS'clock=core.Clock()\n'
p264
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p265
aS"subdata['datestamp']=datestamp\n"
p266
aS"subdata['expt_title']='tampico_probabilistic'\n"
p267
aS"subdata['script']=store_scriptfile()\n"
p268
aS"subdata['response']={}\n"
p269
aS"subdata['score']={}\n"
p270
aS"subdata['rt']={}\n"
p271
aS"subdata['stim_onset_time']={}\n"
p272
aS"subdata['stim_log']={}\n"
p273
aS"subdata['is_this_SS_trial']={}\n"
p274
aS"subdata['SS']={}\n"
p275
aS"subdata['broke_on_trial']={}\n"
p276
ag212
aS"subdata['start_key']='5'\n"
p277
aS"subdata['quit_key']='q'\n"
p278
ag212
aS"subdata['simulated_response']=False\n"
p279
ag212
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p280
aS'logging.console.setLevel(logging.INFO)\n'
p281
aS'logfile=logging.LogFile(dataFileName,level=logging.DATA)\n'
p282
ag212
ag212
aS'try:\n'
p283
aS"    print 'initializing serial device:'\n"
p284
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p285
aS'    print dev\n'
p286
aS"    print 'using serial device: ', dev\n"
p287
aS'    if not dev.isOpen():\n'
p288
aS"        raise Exception('noPump')\n"
p289
aS'    hasPump=True\n'
p290
aS'except:\n'
p291
aS'    hasPump=False\n'
p292
ag212
ag212
aS'#from new_era import PumpInterface\n'
p293
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p294
ag212
aS'# deliver 0.5 ml over 5 seconds\n'
p295
aS'# equates to\n'
p296
ag212
aS'diameter=26.59\n'
p297
aS'mls_to_deliver=0.5\n'
p298
aS'delivery_time=2.0\n'
p299
aS'cue_time=2.0\n'
p300
aS'wait_time=2.0\n'
p301
aS'rinse_time=2.0\n'
p302
aS'swallow_time=2.0\n'
p303
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p304
ag212
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p305
ag212
aS"trialcond=N.zeros(24).astype('int')\n"
p306
ag212
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p307
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p308
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p309
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p310
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p311
aS'ntrials=len(trialcond)\n'
p312
aS'pump=N.zeros(ntrials)\n'
p313
ag212
aS'N.random.shuffle(trialcond)\n'
p314
ag212
aS'# pump zero is neutral, pump 1 is juice\n'
p315
ag212
aS'pump[trialcond==1]=1\n'
p316
aS'pump[trialcond==2]=1\n'
p317
ag212
ag212
ag212
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p318
ag212
ag212
aS'# clear infusion measurements\n'
p319
aS'if hasPump:\n'
p320
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p321
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p322
ag212
aS'    dev.setBaudrate(9600)\n'
p323
ag212
aS'    for cmd in commands_to_send:\n'
p324
aS"        print 'sending: ',cmd\n"
p325
aS'        dev.sendCmd(cmd)\n'
p326
aS'        core.wait(0.1)\n'
p327
ag212
aS"    subdata['pumpdata']={}\n"
p328
aS'    for p in [0,1]:\n'
p329
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p330
aS"            fullcmd='%d%s'%(p,cmd)\n"
p331
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p332
aS'            core.wait(0.1)\n'
p333
ag212
aS"    print subdata['pumpdata']\n"
p334
ag212
aS'# setup screen\n'
p335
ag212
aS'fullscr=False\n'
p336
ag212
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p337
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p338
ag212
aS'event.clearEvents()\n'
p339
aS'wt=wait_for_trigger()\n'
p340
aS'if not wt:\n'
p341
aS"    print 'quit button pressed!'\n"
p342
aS'    sys.exit()\n'
p343
aS'else:\n'
p344
aS'    print "quit status:",wt\n'
p345
aS'    \n'
p346
aS"message=visual.TextStim(win, text='')\n"
p347
ag212
aS"subdata['trialdata']={}\n"
p348
aS'clock.reset()\n'
p349
aS'event.clearEvents()\n'
p350
ag212
aS'for trial in range(ntrials):\n'
p351
aS'    if check_for_quit(subdata,win):\n'
p352
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p353
aS'        sys.exit()\n'
p354
ag212
aS'    trialdata={}\n'
p355
aS"    print 'trial %d'%trial\n"
p356
aS"    trialdata['onset']=onsets[trial]\n"
p357
aS"    print 'condition %d'%trialcond[trial]\n"
p358
aS'    logging.log(logging.DATA,"Condition: %d"%trialcond[trial])\n'
p359
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p360
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p361
aS'    visual_stim.draw()\n'
p362
aS'    logging.log(logging.DATA, "image=%s"%stim_images[trialcond[trial]])\n'
p363
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p364
aS'        if check_for_quit(subdata,win):\n'
p365
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p366
aS'            sys.exit()\n'
p367
aS'    win.flip()\n'
p368
ag212
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p369
aS'        pass\n'
p370
ag212
aS'    if hasPump:\n'
p371
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p372
aS'        logging.log(logging.DATA,"injecting via pump at address %d"%pump[trial])\n'
p373
ag212
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p374
aS'    else:\n'
p375
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p376
ag212
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p377
aS'        pass\n'
p378
aS"    message=visual.TextStim(win, text='')\n"
p379
aS'    message.draw()\n'
p380
aS'    win.flip()\n'
p381
aS'    if hasPump:\n'
p382
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p383
ag212
ag212
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p384
aS'        pass\n'
p385
ag212
aS'    if hasPump:\n'
p386
aS"        print 'injecting rinse via pump at address %d'%0\n"
p387
aS"        dev.sendCmd('%dRUN'%0)\n"
p388
aS'    else:\n'
p389
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p390
ag212
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p391
aS'        pass\n'
p392
ag212
aS"    message=visual.TextStim(win, text='swallow')\n"
p393
aS'    message.draw()\n'
p394
aS'    win.flip()\n'
p395
ag212
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p396
aS'        pass\n'
p397
aS"    message=visual.TextStim(win, text='')\n"
p398
aS'    message.draw()\n'
p399
aS'    win.flip()\n'
p400
ag212
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p401
aS'        pass\n'
p402
ag212
aS"    subdata['trialdata'][trial]=trialdata           \n"
p403
ag212
aS'win.close()\n'
p404
ag212
aS"#print dev.sendCmd('VER')\n"
p405
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p406
aS'pickle.dump(subdata,f)\n'
p407
aS'f.close()\n'
p408
asS'SS'
p409
(dp410
sS'pumpver'
p411
g169
sS'completed'
p412
I0
sS'hostname'
p413
S'wireless-10-145-176-83.public.utexas.edu'
p414
sS'quit_key'
p415
S'q'
p416
sS'stim_onset_time'
p417
(dp418
sS'response'
p419
(dp420
sS'is_this_SS_trial'
p421
(dp422
sS'subcode'
p423
S'sb_00108'
p424
sS'score'
p425
(dp426
sS'broke_on_trial'
p427
(dp428
sS'datestamp'
p429
S'2015-10-10-09_48_13'
p430
sS'start_key'
p431
S'5'
p432
sS'cwd'
p433
S'/Users/imagining/Desktop/liquid_working'
p434
sS'expt_title'
p435
S'tampico_probabilistic'
p436
s.