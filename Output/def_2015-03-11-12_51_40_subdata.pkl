(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200SI0.000W0.000ML\x03'
p43
aS'\x0201SI0.500W0.000ML\x03'
p44
assI1
(dp45
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00$@'
p46
tp47
Rp48
sg41
(lp49
S'\x0200SI0.500W0.000ML\x03'
p50
aS'\x0201SI1.000W0.000ML\x03'
p51
asssS'simulated_response'
p52
I00
sS'script'
p53
(lp54
S'"""\n'
p55
aS'deliver juice\n'
p56
aS'"""\n'
p57
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p58
aS'import psychopy.app\n'
p59
aS'import numpy as N\n'
p60
aS'import sys,os,pickle\n'
p61
aS'################################################\n'
p62
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p63
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p64
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p65
aS'import cv2\n'
p66
aS'import syringe_pump\n'
p67
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p68
aS'\n'
p69
aS'import socket\n'
p70
aS'from socket import gethostname\n'
p71
aS'import inspect\n'
p72
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p73
ag69
aS'import exptutils\n'
p74
aS'from exptutils import *\n'
p75
ag69
aS'import datetime\n'
p76
ag69
aS'def store_scriptfile():\n'
p77
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p78
aS'    f=open(scriptfile)\n'
p79
aS'    script=f.readlines()\n'
p80
aS'    f.close()\n'
p81
aS'    return script\n'
p82
ag69
aS'def check_for_quit(subdata,win):\n'
p83
aS'    k=event.getKeys()\n'
p84
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p85
aS"    print 'found:',k\n"
p86
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p87
aS"        print 'quit key pressed'\n"
p88
aS'        return True\n'
p89
aS'    else:\n'
p90
aS'        return False\n'
p91
ag69
aS'def wait_for_trigger():\n'
p92
aS'    event.clearEvents()\n'
p93
aS"    if subdata['simulated_response']:\n"
p94
aS'        msg="SIMULATION MODE"\n'
p95
aS'    else:\n'
p96
aS"        msg=''\n"
p97
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p98
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p99
aS"    alignHoriz='center',wrapWidth=50)\n"
p100
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p101
aS'    win.flip()\n'
p102
aS'    start=False\n'
p103
aS'    while start==False:\n'
p104
aS'        k=event.waitKeys()\n'
p105
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p106
aS'            start=True\n'
p107
aS"            message.setText('')#this clears the screen\n"
p108
aS'            win.flip()\n'
p109
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p110
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p111
aS'            return False\n'
p112
aS'    return True\n'
p113
ag69
aS'subdata={}\n'
p114
aS"#subdata['subcode']='test'\n"
p115
aS"subdata['subcode']=raw_input('subject id: ')\n"
p116
ag69
aS'# initialize subdata dictionary to store info about the study\n'
p117
aS"subdata['completed']=0\n"
p118
aS"subdata['cwd']=os.getcwd()\n"
p119
aS"subdata['hostname']=socket.gethostname()\n"
p120
aS'clock=core.Clock()\n'
p121
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p122
aS"subdata['datestamp']=datestamp\n"
p123
aS"subdata['expt_title']='tampico_probabilistic'\n"
p124
aS"subdata['script']=store_scriptfile()\n"
p125
aS"subdata['response']={}\n"
p126
aS"subdata['score']={}\n"
p127
aS"subdata['rt']={}\n"
p128
aS"subdata['stim_onset_time']={}\n"
p129
aS"subdata['stim_log']={}\n"
p130
aS"subdata['is_this_SS_trial']={}\n"
p131
aS"subdata['SS']={}\n"
p132
aS"subdata['broke_on_trial']={}\n"
p133
ag69
aS"subdata['start_key']='5'\n"
p134
aS"subdata['quit_key']='q'\n"
p135
ag69
aS"subdata['simulated_response']=False\n"
p136
ag69
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p137
aS'logging.console.setLevel(logging.INFO)\n'
p138
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p139
ag69
ag69
aS'try:\n'
p140
aS"    print 'initializing serial device:'\n"
p141
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p142
aS'    print dev\n'
p143
aS"    print 'using serial device: ', dev\n"
p144
aS'    if not dev.isOpen():\n'
p145
aS"        raise Exception('noPump')\n"
p146
aS'    hasPump=True\n'
p147
aS'except:\n'
p148
aS'    hasPump=False\n'
p149
ag69
ag69
aS'#from new_era import PumpInterface\n'
p150
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p151
ag69
aS'# deliver 0.5 ml over 5 seconds\n'
p152
aS'# equates to\n'
p153
ag69
aS'diameter=26.59\n'
p154
aS'mls_to_deliver=0.5\n'
p155
aS'delivery_time=2.0\n'
p156
aS'cue_time=2.0\n'
p157
aS'wait_time=2.0\n'
p158
aS'rinse_time=2.0\n'
p159
aS'swallow_time=2.0\n'
p160
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p161
ag69
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p162
ag69
aS"trialcond=N.zeros(24).astype('int')\n"
p163
ag69
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p164
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p165
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p166
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p167
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p168
aS'ntrials=len(trialcond)\n'
p169
aS'pump=N.zeros(ntrials)\n'
p170
ag69
aS'N.random.shuffle(trialcond)\n'
p171
ag69
aS'# pump zero is neutral, pump 1 is juice\n'
p172
ag69
aS'pump[trialcond==1]=1\n'
p173
aS'pump[trialcond==2]=1\n'
p174
ag69
ag69
ag69
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p175
ag69
ag69
aS'# clear infusion measurements\n'
p176
aS'if hasPump:\n'
p177
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p178
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p179
ag69
aS'    dev.setBaudrate(9600)\n'
p180
ag69
aS'    for cmd in commands_to_send:\n'
p181
aS"        print 'sending: ',cmd\n"
p182
aS'        dev.sendCmd(cmd)\n'
p183
aS'        core.wait(0.1)\n'
p184
ag69
aS"    subdata['pumpdata']={}\n"
p185
aS'    for p in [0,1]:\n'
p186
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p187
aS"            fullcmd='%d%s'%(p,cmd)\n"
p188
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p189
aS'            core.wait(0.1)\n'
p190
ag69
aS"    print subdata['pumpdata']\n"
p191
ag69
aS'# setup screen\n'
p192
ag69
aS'fullscr=False\n'
p193
ag69
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p194
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p195
ag69
aS'event.clearEvents()\n'
p196
aS'wt=wait_for_trigger()\n'
p197
aS'if not wt:\n'
p198
aS"    print 'quit button pressed!'\n"
p199
aS'    sys.exit()\n'
p200
aS'else:\n'
p201
aS'    print "quit status:",wt\n'
p202
aS'    \n'
p203
aS"message=visual.TextStim(win, text='')\n"
p204
ag69
aS"subdata['trialdata']={}\n"
p205
aS'clock.reset()\n'
p206
aS'event.clearEvents()\n'
p207
ag69
aS'for trial in range(ntrials):\n'
p208
aS'    if check_for_quit(subdata,win):\n'
p209
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p210
aS'        sys.exit()\n'
p211
ag69
aS'    trialdata={}\n'
p212
aS"    print 'trial %d'%trial\n"
p213
aS"    trialdata['onset']=onsets[trial]\n"
p214
aS"    print 'condition %d'%trialcond[trial]\n"
p215
aS'    logging.log(logging.DATA,"Condition: %d\\n"%trialcond[trial])\n'
p216
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p217
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p218
aS'    visual_stim.draw()\n'
p219
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p220
aS'        if check_for_quit(subdata,win):\n'
p221
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p222
aS'            sys.exit()\n'
p223
aS'    win.flip()\n'
p224
ag69
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p225
aS'        pass\n'
p226
ag69
aS'    if hasPump:\n'
p227
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p228
aS'        logging.log(logging.DATA,"injecting via pump at address %d\\n"%pump[trial])\n'
p229
ag69
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p230
aS'    else:\n'
p231
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p232
ag69
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p233
aS'        pass\n'
p234
aS"    message=visual.TextStim(win, text='')\n"
p235
aS'    message.draw()\n'
p236
aS'    win.flip()\n'
p237
aS'    if hasPump:\n'
p238
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p239
ag69
ag69
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p240
aS'        pass\n'
p241
ag69
aS'    if hasPump:\n'
p242
aS"        print 'injecting rinse via pump at address %d'%0\n"
p243
aS"        dev.sendCmd('%dRUN'%0)\n"
p244
aS'    else:\n'
p245
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p246
ag69
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p247
aS'        pass\n'
p248
ag69
aS"    message=visual.TextStim(win, text='swallow')\n"
p249
aS'    message.draw()\n'
p250
aS'    win.flip()\n'
p251
ag69
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p252
aS'        pass\n'
p253
aS"    message=visual.TextStim(win, text='')\n"
p254
aS'    message.draw()\n'
p255
aS'    win.flip()\n'
p256
ag69
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p257
aS'        pass\n'
p258
ag69
aS"    subdata['trialdata'][trial]=trialdata           \n"
p259
ag69
aS'win.close()\n'
p260
ag69
aS"#print dev.sendCmd('VER')\n"
p261
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p262
aS'pickle.dump(subdata,f)\n'
p263
aS'f.close()\n'
p264
asS'SS'
p265
(dp266
sS'pumpver'
p267
S''
p268
sS'completed'
p269
I0
sS'hostname'
p270
S'wireless-10-145-25-130.public.utexas.edu'
p271
sS'quit_key'
p272
S'q'
p273
sS'stim_onset_time'
p274
(dp275
sS'response'
p276
(dp277
sS'is_this_SS_trial'
p278
(dp279
sS'subcode'
p280
S'def'
p281
sS'score'
p282
(dp283
sS'broke_on_trial'
p284
(dp285
sS'datestamp'
p286
S'2015-03-11-12_51_40'
p287
sS'start_key'
p288
S'5'
p289
sS'cwd'
p290
S'/Users/imagining/Desktop/liquid_working'
p291
sS'expt_title'
p292
S'tampico_probabilistic'
p293
s.