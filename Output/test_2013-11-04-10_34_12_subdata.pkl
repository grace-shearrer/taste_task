(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'simulated_response'
p27
I00
sS'script'
p28
(lp29
S'"""\n'
p30
aS'deliver juice\n'
p31
aS'"""\n'
p32
aS'\n'
p33
aS'import numpy as N\n'
p34
aS'import syringe_pump\n'
p35
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p36
aS'import sys,os,pickle\n'
p37
aS'import socket\n'
p38
aS'from socket import gethostname\n'
p39
aS'import inspect\n'
p40
aS"sys.path.append('/Applications/liquid/psychtask/')\n"
p41
ag33
aS'import exptutils\n'
p42
aS'from exptutils import *\n'
p43
ag33
aS'import datetime\n'
p44
ag33
aS'def store_scriptfile():\n'
p45
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p46
aS'    f=open(scriptfile)\n'
p47
aS'    script=f.readlines()\n'
p48
aS'    f.close()\n'
p49
aS'    return script\n'
p50
ag33
aS'def check_for_quit(subdata,win):\n'
p51
aS'    k=event.getKeys()\n'
p52
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p53
aS"    print 'found:',k\n"
p54
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p55
aS"        print 'quit key pressed'\n"
p56
aS'        return True\n'
p57
aS'    else:\n'
p58
aS'        return False\n'
p59
ag33
aS'def wait_for_trigger():\n'
p60
aS'    event.clearEvents()\n'
p61
aS"    if subdata['simulated_response']:\n"
p62
aS'        msg="SIMULATION MODE"\n'
p63
aS'    else:\n'
p64
aS"        msg=''\n"
p65
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p66
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p67
aS"    alignHoriz='center',wrapWidth=50)\n"
p68
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p69
aS'    win.flip()\n'
p70
aS'    start=False\n'
p71
aS'    while start==False:\n'
p72
aS'        k=event.waitKeys()\n'
p73
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p74
aS'            start=True\n'
p75
aS"            message.setText('')#this clears the screen\n"
p76
aS'            win.flip()\n'
p77
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p78
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p79
aS'            return False\n'
p80
aS'    return True\n'
p81
ag33
aS'subdata={}\n'
p82
aS"subdata['subcode']='test'\n"
p83
aS'# initialize subdata dictionary to store info about the study\n'
p84
aS"subdata['completed']=0\n"
p85
aS"subdata['cwd']=os.getcwd()\n"
p86
aS"subdata['hostname']=socket.gethostname()\n"
p87
aS'clock=core.Clock()\n'
p88
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p89
aS"subdata['datestamp']=datestamp\n"
p90
aS"subdata['expt_title']='tampico_probabilistic'\n"
p91
aS"subdata['script']=store_scriptfile()\n"
p92
aS"subdata['response']={}\n"
p93
aS"subdata['score']={}\n"
p94
aS"subdata['rt']={}\n"
p95
aS"subdata['stim_onset_time']={}\n"
p96
aS"subdata['stim_log']={}\n"
p97
aS"subdata['is_this_SS_trial']={}\n"
p98
aS"subdata['SS']={}\n"
p99
aS"subdata['broke_on_trial']={}\n"
p100
ag33
aS"subdata['start_key']='5'\n"
p101
aS"subdata['quit_key']='q'\n"
p102
ag33
aS"subdata['simulated_response']=False\n"
p103
ag33
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p104
aS'logging.console.setLevel(logging.INFO)\n'
p105
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p106
ag33
ag33
aS'try:\n'
p107
aS"    print 'initializing serial device:'\n"
p108
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p109
aS'    print dev\n'
p110
aS"    print 'using serial device: ', dev\n"
p111
aS'    if not dev.isOpen():\n'
p112
aS"        raise Exception('noPump')\n"
p113
aS'    hasPump=True\n'
p114
aS'except:\n'
p115
aS'    hasPump=False\n'
p116
ag33
ag33
aS'#from new_era import PumpInterface\n'
p117
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p118
ag33
aS'# deliver 0.5 ml over 5 seconds\n'
p119
aS'# equates to\n'
p120
ag33
aS'diameter=26.59\n'
p121
aS'mls_to_deliver=0.5\n'
p122
aS'delivery_time=2.0\n'
p123
aS'cue_time=2.0\n'
p124
aS'wait_time=2.0\n'
p125
aS'rinse_time=2.0\n'
p126
aS'swallow_time=2.0\n'
p127
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p128
ag33
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p129
ag33
aS"trialcond=N.zeros(24).astype('int')\n"
p130
ag33
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p131
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p132
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p133
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p134
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p135
aS'ntrials=len(trialcond)\n'
p136
aS'pump=N.zeros(ntrials)\n'
p137
ag33
aS'N.random.shuffle(trialcond)\n'
p138
ag33
aS'# pump zero is neutral, pump 1 is juice\n'
p139
ag33
aS'pump[trialcond==1]=1\n'
p140
aS'pump[trialcond==2]=1\n'
p141
ag33
ag33
ag33
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p142
ag33
ag33
aS'# clear infusion measurements\n'
p143
aS'if hasPump:\n'
p144
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p145
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p146
ag33
aS'    dev.setBaudrate(9600)\n'
p147
ag33
aS'    for cmd in commands_to_send:\n'
p148
aS"        print 'sending: ',cmd\n"
p149
aS'        dev.sendCmd(cmd)\n'
p150
aS'        core.wait(0.1)\n'
p151
ag33
aS"    subdata['pumpdata']={}\n"
p152
aS'    for p in [0,1]:\n'
p153
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p154
aS"            fullcmd='%d%s'%(p,cmd)\n"
p155
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p156
aS'            core.wait(0.1)\n'
p157
ag33
aS"    print subdata['pumpdata']\n"
p158
ag33
aS'# setup screen\n'
p159
ag33
aS'fullscr=False\n'
p160
ag33
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p161
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p162
ag33
aS'event.clearEvents()\n'
p163
aS'wt=wait_for_trigger()\n'
p164
aS'if not wt:\n'
p165
aS"    print 'quit button pressed!'\n"
p166
aS'    sys.exit()\n'
p167
aS'else:\n'
p168
aS'    print "quit status:",wt\n'
p169
aS'    \n'
p170
aS"message=visual.TextStim(win, text='')\n"
p171
ag33
aS"subdata['trialdata']={}\n"
p172
aS'clock.reset()\n'
p173
aS'event.clearEvents()\n'
p174
ag33
aS'for trial in range(ntrials):\n'
p175
aS'    if check_for_quit(subdata,win):\n'
p176
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p177
aS'        sys.exit()\n'
p178
ag33
aS'    trialdata={}\n'
p179
aS"    print 'trial %d'%trial\n"
p180
aS"    trialdata['onset']=onsets[trial]\n"
p181
aS"    print 'condition %d'%trialcond[trial]\n"
p182
aS'    \n'
p183
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p184
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p185
aS'    visual_stim.draw()\n'
p186
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p187
aS'        if check_for_quit(subdata,win):\n'
p188
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p189
aS'            sys.exit()\n'
p190
aS'    win.flip()\n'
p191
ag33
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p192
aS'        pass\n'
p193
ag33
aS'    if hasPump:\n'
p194
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p195
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p196
aS'    else:\n'
p197
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p198
ag33
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p199
aS'        pass\n'
p200
aS"    message=visual.TextStim(win, text='')\n"
p201
aS'    message.draw()\n'
p202
aS'    win.flip()\n'
p203
aS'    if hasPump:\n'
p204
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p205
ag33
ag33
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p206
aS'        pass\n'
p207
ag33
aS'    if hasPump:\n'
p208
aS"        print 'injecting rinse via pump at address %d'%0\n"
p209
aS"        dev.sendCmd('%dRUN'%0)\n"
p210
aS'    else:\n'
p211
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p212
ag33
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p213
aS'        pass\n'
p214
ag33
aS"    message=visual.TextStim(win, text='swallow')\n"
p215
aS'    message.draw()\n'
p216
aS'    win.flip()\n'
p217
ag33
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p218
aS'        pass\n'
p219
aS"    message=visual.TextStim(win, text='')\n"
p220
aS'    message.draw()\n'
p221
aS'    win.flip()\n'
p222
ag33
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p223
aS'        pass\n'
p224
ag33
aS"    subdata['trialdata'][trial]=trialdata           \n"
p225
ag33
aS'win.close()\n'
p226
ag33
aS"#print dev.sendCmd('VER')\n"
p227
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p228
aS'pickle.dump(subdata,f)\n'
p229
aS'f.close()\n'
p230
asS'SS'
p231
(dp232
sS'pumpver'
p233
S''
p234
sS'completed'
p235
I0
sS'hostname'
p236
S'IRC-arizona'
p237
sS'quit_key'
p238
S'q'
p239
sS'stim_onset_time'
p240
(dp241
sS'response'
p242
(dp243
sS'is_this_SS_trial'
p244
(dp245
sS'subcode'
p246
S'test'
p247
sS'score'
p248
(dp249
sS'broke_on_trial'
p250
(dp251
sS'datestamp'
p252
S'2013-11-04-10_34_12'
p253
sS'start_key'
p254
S'5'
p255
sS'cwd'
p256
S'/Applications/liquid'
p257
sS'expt_title'
p258
S'tampico_probabilistic'
p259
s.