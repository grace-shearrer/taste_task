(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200SI0.000W0.000ML\x03'
p43
aS'\x0201SI0.500W0.000ML\x03'
p44
assI1
(dp45
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00$@'
p46
tp47
Rp48
sg41
(lp49
S'\x0200II0.988W0.000ML\x03'
p50
aS'\x0201SI0.500W0.000ML\x03'
p51
assI2
(dp52
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x004@'
p53
tp54
Rp55
sg41
(lp56
S'\x0200II1.985W0.000ML\x03'
p57
aS'\x0201SI0.500W0.000ML\x03'
p58
assI3
(dp59
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00>@'
p60
tp61
Rp62
sg41
(lp63
S'\x0200SI2.500W0.000ML\x03'
p64
aS'\x0201SI1.000W0.000ML\x03'
p65
assI4
(dp66
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00D@'
p67
tp68
Rp69
sg41
(lp70
S'\x0200SI3.001W0.000ML\x03'
p71
aS'\x0201SI1.500W0.000ML\x03'
p72
assI5
(dp73
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00I@'
p74
tp75
Rp76
sg41
(lp77
S'\x0200II3.986W0.000ML\x03'
p78
aS'\x0201SI1.500W0.000ML\x03'
p79
assI6
(dp80
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00N@'
p81
tp82
Rp83
sg41
(lp84
S'\x0200SI4.501W0.000ML\x03'
p85
aS'\x0201SI2.000W0.000ML\x03'
p86
assI7
(dp87
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80Q@'
p88
tp89
Rp90
sg41
(lp91
S'\x0200SI5.001W0.000ML\x03'
p92
aS'\x0201SI2.500W0.000ML\x03'
p93
assI8
(dp94
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00T@'
p95
tp96
Rp97
sg41
(lp98
S'\x0200II5.986W0.000ML\x03'
p99
aS'\x0201SI2.500W0.000ML\x03'
p100
assI9
(dp101
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80V@'
p102
tp103
Rp104
sg41
(lp105
S'\x0200II6.991W0.000ML\x03'
p106
aS'\x0201SI2.500W0.000ML\x03'
p107
assI10
(dp108
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00Y@'
p109
tp110
Rp111
sg41
(lp112
S'\x0200SI7.502W0.000ML\x03'
p113
aS'\x0201SI3.001W0.000ML\x03'
p114
assI11
(dp115
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80[@'
p116
tp117
Rp118
sg41
(lp119
S''
p120
ag120
assI12
(dp121
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00^@'
p122
tp123
Rp124
sg41
(lp125
g120
ag120
assI13
(dp126
g30
g31
(g35
S'\x00\x00\x00\x00\x00@`@'
p127
tp128
Rp129
sg41
(lp130
g120
ag120
assI14
(dp131
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80a@'
p132
tp133
Rp134
sg41
(lp135
g120
ag120
assI15
(dp136
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0b@'
p137
tp138
Rp139
sg41
(lp140
g120
ag120
assI16
(dp141
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00d@'
p142
tp143
Rp144
sg41
(lp145
g120
ag120
assI17
(dp146
g30
g31
(g35
S'\x00\x00\x00\x00\x00@e@'
p147
tp148
Rp149
sg41
(lp150
g120
ag120
assI18
(dp151
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80f@'
p152
tp153
Rp154
sg41
(lp155
g120
ag120
assI19
(dp156
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0g@'
p157
tp158
Rp159
sg41
(lp160
g120
ag120
assI20
(dp161
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00i@'
p162
tp163
Rp164
sg41
(lp165
g120
ag120
assI21
(dp166
g30
g31
(g35
S'\x00\x00\x00\x00\x00@j@'
p167
tp168
Rp169
sg41
(lp170
g120
ag120
assI22
(dp171
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80k@'
p172
tp173
Rp174
sg41
(lp175
g120
ag120
assI23
(dp176
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0l@'
p177
tp178
Rp179
sg41
(lp180
g120
ag120
asssS'simulated_response'
p181
I00
sS'script'
p182
(lp183
S'"""\n'
p184
aS'deliver juice\n'
p185
aS'"""\n'
p186
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p187
aS'import psychopy.app\n'
p188
aS'import numpy as N\n'
p189
aS'import sys,os,pickle\n'
p190
aS'################################################\n'
p191
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p192
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p193
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p194
aS'import cv2\n'
p195
aS'import syringe_pump\n'
p196
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p197
aS'\n'
p198
aS'import socket\n'
p199
aS'from socket import gethostname\n'
p200
aS'import inspect\n'
p201
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p202
ag198
aS'import exptutils\n'
p203
aS'from exptutils import *\n'
p204
ag198
aS'import datetime\n'
p205
ag198
aS'def store_scriptfile():\n'
p206
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p207
aS'    f=open(scriptfile)\n'
p208
aS'    script=f.readlines()\n'
p209
aS'    f.close()\n'
p210
aS'    return script\n'
p211
ag198
aS'def check_for_quit(subdata,win):\n'
p212
aS'    k=event.getKeys()\n'
p213
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p214
aS"    print 'found:',k\n"
p215
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p216
aS"        print 'quit key pressed'\n"
p217
aS'        return True\n'
p218
aS'    else:\n'
p219
aS'        return False\n'
p220
ag198
aS'def wait_for_trigger():\n'
p221
aS'    event.clearEvents()\n'
p222
aS"    if subdata['simulated_response']:\n"
p223
aS'        msg="SIMULATION MODE"\n'
p224
aS'    else:\n'
p225
aS"        msg=''\n"
p226
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p227
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p228
aS"    alignHoriz='center',wrapWidth=50)\n"
p229
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p230
aS'    win.flip()\n'
p231
aS'    start=False\n'
p232
aS'    while start==False:\n'
p233
aS'        k=event.waitKeys()\n'
p234
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p235
aS'            start=True\n'
p236
aS"            message.setText('')#this clears the screen\n"
p237
aS'            win.flip()\n'
p238
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p239
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p240
aS'            return False\n'
p241
aS'    return True\n'
p242
ag198
aS'subdata={}\n'
p243
aS"#subdata['subcode']='test'\n"
p244
aS"subdata['subcode']=raw_input('subject id: ')\n"
p245
ag198
aS'# initialize subdata dictionary to store info about the study\n'
p246
aS"subdata['completed']=0\n"
p247
aS"subdata['cwd']=os.getcwd()\n"
p248
aS"subdata['hostname']=socket.gethostname()\n"
p249
aS'clock=core.Clock()\n'
p250
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p251
aS"subdata['datestamp']=datestamp\n"
p252
aS"subdata['expt_title']='tampico_probabilistic'\n"
p253
aS"subdata['script']=store_scriptfile()\n"
p254
aS"subdata['response']={}\n"
p255
aS"subdata['score']={}\n"
p256
aS"subdata['rt']={}\n"
p257
aS"subdata['stim_onset_time']={}\n"
p258
aS"subdata['stim_log']={}\n"
p259
aS"subdata['is_this_SS_trial']={}\n"
p260
aS"subdata['SS']={}\n"
p261
aS"subdata['broke_on_trial']={}\n"
p262
ag198
aS"subdata['start_key']='5'\n"
p263
aS"subdata['quit_key']='q'\n"
p264
ag198
aS"subdata['simulated_response']=False\n"
p265
ag198
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p266
aS'logging.console.setLevel(logging.INFO)\n'
p267
aS'logfile=logging.LogFile(dataFileName,level=logging.DATA)\n'
p268
ag198
ag198
aS'try:\n'
p269
aS"    print 'initializing serial device:'\n"
p270
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p271
aS'    print dev\n'
p272
aS"    print 'using serial device: ', dev\n"
p273
aS'    if not dev.isOpen():\n'
p274
aS"        raise Exception('noPump')\n"
p275
aS'    hasPump=True\n'
p276
aS'except:\n'
p277
aS'    hasPump=False\n'
p278
ag198
ag198
aS'#from new_era import PumpInterface\n'
p279
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p280
ag198
aS'# deliver 0.5 ml over 5 seconds\n'
p281
aS'# equates to\n'
p282
ag198
aS'diameter=26.59\n'
p283
aS'mls_to_deliver=0.5\n'
p284
aS'delivery_time=2.0\n'
p285
aS'cue_time=2.0\n'
p286
aS'wait_time=2.0\n'
p287
aS'rinse_time=2.0\n'
p288
aS'swallow_time=2.0\n'
p289
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p290
ag198
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p291
ag198
aS"trialcond=N.zeros(24).astype('int')\n"
p292
ag198
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p293
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p294
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p295
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p296
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p297
aS'ntrials=len(trialcond)\n'
p298
aS'pump=N.zeros(ntrials)\n'
p299
ag198
aS'N.random.shuffle(trialcond)\n'
p300
ag198
aS'# pump zero is neutral, pump 1 is juice\n'
p301
ag198
aS'pump[trialcond==1]=1\n'
p302
aS'pump[trialcond==2]=1\n'
p303
ag198
ag198
ag198
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p304
ag198
ag198
aS'# clear infusion measurements\n'
p305
aS'if hasPump:\n'
p306
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p307
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p308
ag198
aS'    dev.setBaudrate(9600)\n'
p309
ag198
aS'    for cmd in commands_to_send:\n'
p310
aS"        print 'sending: ',cmd\n"
p311
aS'        dev.sendCmd(cmd)\n'
p312
aS'        core.wait(0.1)\n'
p313
ag198
aS"    subdata['pumpdata']={}\n"
p314
aS'    for p in [0,1]:\n'
p315
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p316
aS"            fullcmd='%d%s'%(p,cmd)\n"
p317
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p318
aS'            core.wait(0.1)\n'
p319
ag198
aS"    print subdata['pumpdata']\n"
p320
ag198
aS'# setup screen\n'
p321
ag198
aS'fullscr=False\n'
p322
ag198
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p323
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p324
ag198
aS'event.clearEvents()\n'
p325
aS'wt=wait_for_trigger()\n'
p326
aS'if not wt:\n'
p327
aS"    print 'quit button pressed!'\n"
p328
aS'    sys.exit()\n'
p329
aS'else:\n'
p330
aS'    print "quit status:",wt\n'
p331
aS'    \n'
p332
aS"message=visual.TextStim(win, text='')\n"
p333
ag198
aS"subdata['trialdata']={}\n"
p334
aS'clock.reset()\n'
p335
aS'event.clearEvents()\n'
p336
ag198
aS'for trial in range(ntrials):\n'
p337
aS'    if check_for_quit(subdata,win):\n'
p338
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p339
aS'        sys.exit()\n'
p340
ag198
aS'    trialdata={}\n'
p341
aS"    print 'trial %d'%trial\n"
p342
aS"    trialdata['onset']=onsets[trial]\n"
p343
aS"    print 'condition %d'%trialcond[trial]\n"
p344
aS'    logging.log(logging.DATA,"Condition: %d"%trialcond[trial])\n'
p345
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p346
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p347
aS'    visual_stim.draw()\n'
p348
aS'    logging.log(logging.DATA, "image=%s"%stim_images[trialcond[trial]])\n'
p349
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p350
aS'        if check_for_quit(subdata,win):\n'
p351
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p352
aS'            sys.exit()\n'
p353
aS'    win.flip()\n'
p354
ag198
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p355
aS'        pass\n'
p356
ag198
aS'    if hasPump:\n'
p357
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p358
aS'        logging.log(logging.DATA,"injecting via pump at address %d"%pump[trial])\n'
p359
ag198
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p360
aS'    else:\n'
p361
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p362
ag198
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p363
aS'        pass\n'
p364
aS"    message=visual.TextStim(win, text='')\n"
p365
aS'    message.draw()\n'
p366
aS'    win.flip()\n'
p367
aS'    if hasPump:\n'
p368
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p369
ag198
ag198
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p370
aS'        pass\n'
p371
ag198
aS'    if hasPump:\n'
p372
aS"        print 'injecting rinse via pump at address %d'%0\n"
p373
aS"        dev.sendCmd('%dRUN'%0)\n"
p374
aS'    else:\n'
p375
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p376
ag198
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p377
aS'        pass\n'
p378
ag198
aS"    message=visual.TextStim(win, text='swallow')\n"
p379
aS'    message.draw()\n'
p380
aS'    win.flip()\n'
p381
ag198
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p382
aS'        pass\n'
p383
aS"    message=visual.TextStim(win, text='')\n"
p384
aS'    message.draw()\n'
p385
aS'    win.flip()\n'
p386
ag198
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p387
aS'        pass\n'
p388
ag198
aS"    subdata['trialdata'][trial]=trialdata           \n"
p389
ag198
aS'win.close()\n'
p390
ag198
aS"#print dev.sendCmd('VER')\n"
p391
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p392
aS'pickle.dump(subdata,f)\n'
p393
aS'f.close()\n'
p394
asS'SS'
p395
(dp396
sS'pumpver'
p397
g120
sS'completed'
p398
I0
sS'hostname'
p399
S'wireless-10-145-31-246.public.utexas.edu'
p400
sS'quit_key'
p401
S'q'
p402
sS'stim_onset_time'
p403
(dp404
sS'response'
p405
(dp406
sS'is_this_SS_trial'
p407
(dp408
sS'subcode'
p409
S'sb_0082'
p410
sS'score'
p411
(dp412
sS'broke_on_trial'
p413
(dp414
sS'datestamp'
p415
S'2015-07-29-07_44_12'
p416
sS'start_key'
p417
S'5'
p418
sS'cwd'
p419
S'/Users/imagining/Desktop/liquid_working'
p420
sS'expt_title'
p421
S'tampico_probabilistic'
p422
s.