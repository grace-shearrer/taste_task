(dp0
S'rt'
p1
(dp2
sS'stim_log'
p3
(dp4
sS'trialdata'
p5
(dp6
I0
(dp7
S'onset'
p8
cnumpy.core.multiarray
scalar
p9
(cnumpy
dtype
p10
(S'f8'
p11
I0
I1
tp12
Rp13
(I3
S'<'
p14
NNNI-1
I-1
I0
tp15
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p16
tp17
Rp18
sssS'simulated_response'
p19
I01
sS'script'
p20
(lp21
S'"""\n'
p22
aS'deliver juice\n'
p23
aS'"""\n'
p24
aS'\n'
p25
aS'import numpy as N\n'
p26
aS'import syringe_pump\n'
p27
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p28
aS'import os\n'
p29
aS'import socket\n'
p30
aS'from socket import gethostname\n'
p31
aS'import inspect\n'
p32
aS'import exptutils\n'
p33
aS'from exptutils import *\n'
p34
ag25
aS'import datetime\n'
p35
ag25
aS'def store_scriptfile():\n'
p36
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p37
aS'    f=open(scriptfile)\n'
p38
aS'    script=f.readlines()\n'
p39
aS'    f.close()\n'
p40
aS'    return script\n'
p41
ag25
aS'def check_for_quit(subdata,win):\n'
p42
aS'    k=event.getKeys()\n'
p43
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p44
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p45
aS'        return 1\n'
p46
aS'    else:\n'
p47
aS'        return 0\n'
p48
ag25
aS'def wait_for_trigger():\n'
p49
aS'    event.clearEvents()\n'
p50
aS"    if subdata['simulated_response']:\n"
p51
aS'        msg="SIMULATION MODE"\n'
p52
aS'    else:\n'
p53
aS"        msg=''\n"
p54
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)'%(msg,subdata['start_key']),\n"
p55
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p56
aS"    alignHoriz='center',wrapWidth=50)\n"
p57
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p58
aS'    win.flip()\n'
p59
aS'    start=False\n'
p60
aS'    while start==False:\n'
p61
aS'        k=event.waitKeys()\n'
p62
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p63
aS'            start=True\n'
p64
aS"            message.setText('')#this clears the screen\n"
p65
aS'            win.flip()\n'
p66
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p67
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p68
aS'            return subdata\n'
p69
ag25
aS'subdata={}\n'
p70
aS"subdata['subcode']='test'\n"
p71
aS'# initialize subdata dictionary to store info about the study\n'
p72
aS"subdata['completed']=0\n"
p73
aS"subdata['cwd']=os.getcwd()\n"
p74
aS"subdata['hostname']=socket.gethostname()\n"
p75
aS'clock=core.Clock()\n'
p76
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p77
aS"subdata['datestamp']=datestamp\n"
p78
aS"subdata['expt_title']='tampico_probabilistic'\n"
p79
aS"subdata['script']=store_scriptfile()\n"
p80
aS"subdata['response']={}\n"
p81
aS"subdata['score']={}\n"
p82
aS"subdata['rt']={}\n"
p83
aS"subdata['stim_onset_time']={}\n"
p84
aS"subdata['stim_log']={}\n"
p85
aS"subdata['is_this_SS_trial']={}\n"
p86
aS"subdata['SS']={}\n"
p87
aS"subdata['broke_on_trial']={}\n"
p88
ag25
aS"subdata['start_key']='5'\n"
p89
aS"subdata['quit_key']='q'\n"
p90
ag25
aS"subdata['simulated_response']=True\n"
p91
ag25
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p92
aS'logging.console.setLevel(logging.INFO)\n'
p93
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p94
ag25
ag25
aS'try:\n'
p95
aS"    print 'using serial device: ', dev\n"
p96
aS'    if not dev.isOpen():\n'
p97
aS"        raise Exception('noPump')\n"
p98
aS"    print 'initializing serial device:'\n"
p99
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p100
aS'    print dev\n'
p101
aS'    hasPump=True\n'
p102
aS'except:\n'
p103
aS'    hasPump=False\n'
p104
ag25
ag25
aS'#from new_era import PumpInterface\n'
p105
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p106
ag25
aS'# deliver 0.5 ml over 5 seconds\n'
p107
aS'# equates to\n'
p108
ag25
aS'diameter=26.59\n'
p109
aS'mls_to_deliver=0.5\n'
p110
aS'delivery_time=5.0\n'
p111
aS'cue_time=3.0\n'
p112
aS'rate = 0.5*(3600.0/5.0)  # mls/hour\n'
p113
ag25
aS"trialcond=N.zeros(24).astype('int')\n"
p114
ag25
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p115
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p116
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p117
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p118
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p119
aS'ntrials=len(trialcond)\n'
p120
aS'pump=N.zeros(ntrials)\n'
p121
ag25
aS'N.random.shuffle(trialcond)\n'
p122
ag25
aS'# pump zero is neutral, pump 1 is juice\n'
p123
ag25
aS'pump[trialcond==1]=1\n'
p124
aS'pump[trialcond==2]=1\n'
p125
ag25
aS'trial_length=10.0\n'
p126
ag25
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p127
ag25
ag25
aS'# clear infusion measurements\n'
p128
aS'if hasPump:\n'
p129
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p130
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p131
ag25
aS'    dev.setBaudrate(9600)\n'
p132
ag25
aS'    for cmd in commands_to_send:\n'
p133
aS"        print 'sending: ',cmd\n"
p134
aS'        dev.sendCmd(cmd)\n'
p135
aS'        core.wait(0.1)\n'
p136
ag25
aS"    subdata['pumpdata']={}\n"
p137
aS'    for p in [0,1]:\n'
p138
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p139
aS"            fullcmd='%d%s'%(p,cmd)\n"
p140
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p141
aS'            core.wait(0.1)\n'
p142
ag25
aS"    print subdata['pumpdata']\n"
p143
ag25
aS'# setup screen\n'
p144
ag25
aS'fullscr=False\n'
p145
ag25
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p146
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p147
ag25
aS'wait_for_trigger()\n'
p148
ag25
aS"message=visual.TextStim(win, text='')\n"
p149
ag25
aS"subdata['trialdata']={}\n"
p150
aS'clock.reset()\n'
p151
aS'event.clearEvents()\n'
p152
aS'for trial in range(ntrials):\n'
p153
aS'    check_for_quit(subdata,win)\n'
p154
aS'    trialdata={}\n'
p155
aS"    print 'trial %d'%trial\n"
p156
aS"    trialdata['onset']=onsets[trial]\n"
p157
aS"    print 'condition %d'%trialcond[trial]\n"
p158
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p159
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p160
aS'    visual_stim.draw()\n'
p161
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p162
aS'        pass\n'
p163
aS'    win.flip()\n'
p164
ag25
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p165
aS'        pass\n'
p166
ag25
aS'    if hasPump:\n'
p167
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p168
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p169
aS'    else:\n'
p170
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p171
ag25
aS'    message.draw()\n'
p172
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p173
aS'        pass\n'
p174
aS'    win.flip()\n'
p175
aS'    if hasPump:\n'
p176
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p177
aS"    subdata['trialdata'][trial]=trialdata           \n"
p178
ag25
aS'win.close()\n'
p179
ag25
aS"#print dev.sendCmd('VER')\n"
p180
asS'SS'
p181
(dp182
sS'completed'
p183
I0
sS'hostname'
p184
S'Russs-Macbook-Air.local'
p185
sS'quit_key'
p186
S'q'
p187
sS'stim_onset_time'
p188
(dp189
sS'response'
p190
(dp191
sS'is_this_SS_trial'
p192
(dp193
sS'subcode'
p194
S'test'
p195
sS'score'
p196
(dp197
sS'broke_on_trial'
p198
(dp199
sS'datestamp'
p200
S'2013-02-26-15_13_21'
p201
sS'start_key'
p202
S'5'
p203
sS'cwd'
p204
S'/Users/poldrack/Dropbox/code/liquid'
p205
sS'expt_title'
p206
S'tampico_probabilistic'
p207
s.