(dp0
S'rt'
p1
(dp2
sS'stim_log'
p3
(dp4
sS'trialdata'
p5
(dp6
I0
(dp7
S'onset'
p8
cnumpy.core.multiarray
scalar
p9
(cnumpy
dtype
p10
(S'f8'
p11
I0
I1
tp12
Rp13
(I3
S'<'
p14
NNNI-1
I-1
I0
tp15
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p16
tp17
Rp18
ssI1
(dp19
g8
g9
(g13
S'\x00\x00\x00\x00\x00\x00$@'
p20
tp21
Rp22
ssI2
(dp23
g8
g9
(g13
S'\x00\x00\x00\x00\x00\x004@'
p24
tp25
Rp26
ssI3
(dp27
g8
g9
(g13
S'\x00\x00\x00\x00\x00\x00>@'
p28
tp29
Rp30
ssI4
(dp31
g8
g9
(g13
S'\x00\x00\x00\x00\x00\x00D@'
p32
tp33
Rp34
sssS'simulated_response'
p35
I00
sS'script'
p36
(lp37
S'"""\n'
p38
aS'deliver juice\n'
p39
aS'"""\n'
p40
aS'\n'
p41
aS'import numpy as N\n'
p42
aS'import syringe_pump\n'
p43
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p44
aS'import os\n'
p45
aS'import socket\n'
p46
aS'from socket import gethostname\n'
p47
aS'import inspect\n'
p48
aS'import exptutils\n'
p49
aS'from exptutils import *\n'
p50
ag41
aS'import datetime\n'
p51
ag41
aS'def store_scriptfile():\n'
p52
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p53
aS'    f=open(scriptfile)\n'
p54
aS'    script=f.readlines()\n'
p55
aS'    f.close()\n'
p56
aS'    return script\n'
p57
ag41
aS'def check_for_quit(subdata,win):\n'
p58
aS'    k=event.getKeys()\n'
p59
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p60
aS"    print 'found:',k\n"
p61
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p62
aS"        print 'quit key pressed'\n"
p63
aS'        return True\n'
p64
aS'    else:\n'
p65
aS'        return False\n'
p66
ag41
aS'def wait_for_trigger():\n'
p67
aS'    event.clearEvents()\n'
p68
aS"    if subdata['simulated_response']:\n"
p69
aS'        msg="SIMULATION MODE"\n'
p70
aS'    else:\n'
p71
aS"        msg=''\n"
p72
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p73
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p74
aS"    alignHoriz='center',wrapWidth=50)\n"
p75
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p76
aS'    win.flip()\n'
p77
aS'    start=False\n'
p78
aS'    while start==False:\n'
p79
aS'        k=event.waitKeys()\n'
p80
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p81
aS'            start=True\n'
p82
aS"            message.setText('')#this clears the screen\n"
p83
aS'            win.flip()\n'
p84
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p85
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p86
aS'            return False\n'
p87
aS'    return True\n'
p88
ag41
aS'subdata={}\n'
p89
aS"subdata['subcode']='test'\n"
p90
aS'# initialize subdata dictionary to store info about the study\n'
p91
aS"subdata['completed']=0\n"
p92
aS"subdata['cwd']=os.getcwd()\n"
p93
aS"subdata['hostname']=socket.gethostname()\n"
p94
aS'clock=core.Clock()\n'
p95
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p96
aS"subdata['datestamp']=datestamp\n"
p97
aS"subdata['expt_title']='tampico_probabilistic'\n"
p98
aS"subdata['script']=store_scriptfile()\n"
p99
aS"subdata['response']={}\n"
p100
aS"subdata['score']={}\n"
p101
aS"subdata['rt']={}\n"
p102
aS"subdata['stim_onset_time']={}\n"
p103
aS"subdata['stim_log']={}\n"
p104
aS"subdata['is_this_SS_trial']={}\n"
p105
aS"subdata['SS']={}\n"
p106
aS"subdata['broke_on_trial']={}\n"
p107
ag41
aS"subdata['start_key']='5'\n"
p108
aS"subdata['quit_key']='q'\n"
p109
ag41
aS"subdata['simulated_response']=False\n"
p110
ag41
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p111
aS'logging.console.setLevel(logging.INFO)\n'
p112
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p113
ag41
ag41
aS'try:\n'
p114
aS"    print 'using serial device: ', dev\n"
p115
aS'    if not dev.isOpen():\n'
p116
aS"        raise Exception('noPump')\n"
p117
aS"    print 'initializing serial device:'\n"
p118
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p119
aS'    print dev\n'
p120
aS'    hasPump=True\n'
p121
aS'except:\n'
p122
aS'    hasPump=False\n'
p123
ag41
ag41
aS'#from new_era import PumpInterface\n'
p124
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p125
ag41
aS'# deliver 0.5 ml over 5 seconds\n'
p126
aS'# equates to\n'
p127
ag41
aS'diameter=26.59\n'
p128
aS'mls_to_deliver=0.5\n'
p129
aS'delivery_time=5.0\n'
p130
aS'cue_time=3.0\n'
p131
aS'rate = 0.5*(3600.0/5.0)  # mls/hour\n'
p132
ag41
aS"trialcond=N.zeros(24).astype('int')\n"
p133
ag41
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p134
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p135
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p136
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p137
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p138
aS'ntrials=len(trialcond)\n'
p139
aS'pump=N.zeros(ntrials)\n'
p140
ag41
aS'N.random.shuffle(trialcond)\n'
p141
ag41
aS'# pump zero is neutral, pump 1 is juice\n'
p142
ag41
aS'pump[trialcond==1]=1\n'
p143
aS'pump[trialcond==2]=1\n'
p144
ag41
aS'trial_length=10.0\n'
p145
ag41
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p146
ag41
ag41
aS'# clear infusion measurements\n'
p147
aS'if hasPump:\n'
p148
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p149
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p150
ag41
aS'    dev.setBaudrate(9600)\n'
p151
ag41
aS'    for cmd in commands_to_send:\n'
p152
aS"        print 'sending: ',cmd\n"
p153
aS'        dev.sendCmd(cmd)\n'
p154
aS'        core.wait(0.1)\n'
p155
ag41
aS"    subdata['pumpdata']={}\n"
p156
aS'    for p in [0,1]:\n'
p157
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p158
aS"            fullcmd='%d%s'%(p,cmd)\n"
p159
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p160
aS'            core.wait(0.1)\n'
p161
ag41
aS"    print subdata['pumpdata']\n"
p162
ag41
aS'# setup screen\n'
p163
ag41
aS'fullscr=False\n'
p164
ag41
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p165
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p166
ag41
aS'event.clearEvents()\n'
p167
aS'wt=wait_for_trigger()\n'
p168
aS'if not wt:\n'
p169
aS"    print 'quit button pressed!'\n"
p170
aS'    sys.exit()\n'
p171
aS'else:\n'
p172
aS'    print "quit status:",wt\n'
p173
aS'    \n'
p174
aS"message=visual.TextStim(win, text='')\n"
p175
ag41
aS"subdata['trialdata']={}\n"
p176
aS'clock.reset()\n'
p177
aS'event.clearEvents()\n'
p178
ag41
aS'for trial in range(ntrials):\n'
p179
aS'    if check_for_quit(subdata,win):\n'
p180
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p181
aS'        sys.exit()\n'
p182
ag41
aS'    trialdata={}\n'
p183
aS"    print 'trial %d'%trial\n"
p184
aS"    trialdata['onset']=onsets[trial]\n"
p185
aS"    print 'condition %d'%trialcond[trial]\n"
p186
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p187
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p188
aS'    visual_stim.draw()\n'
p189
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p190
aS'        if check_for_quit(subdata,win):\n'
p191
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p192
aS'            sys.exit()\n'
p193
aS'    win.flip()\n'
p194
ag41
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p195
aS'        pass\n'
p196
ag41
aS'    if hasPump:\n'
p197
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p198
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p199
aS'    else:\n'
p200
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p201
ag41
aS'    message.draw()\n'
p202
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p203
aS'        pass\n'
p204
aS'    win.flip()\n'
p205
aS'    if hasPump:\n'
p206
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p207
aS"    subdata['trialdata'][trial]=trialdata           \n"
p208
ag41
aS'win.close()\n'
p209
ag41
aS"#print dev.sendCmd('VER')\n"
p210
asS'SS'
p211
(dp212
sS'completed'
p213
I0
sS'hostname'
p214
S'IRC-arizona'
p215
sS'quit_key'
p216
S'q'
p217
sS'stim_onset_time'
p218
(dp219
sS'response'
p220
(dp221
sS'is_this_SS_trial'
p222
(dp223
sS'subcode'
p224
S'test'
p225
sS'score'
p226
(dp227
sS'broke_on_trial'
p228
(dp229
sS'datestamp'
p230
S'2013-05-20-13_07_29'
p231
sS'start_key'
p232
S'5'
p233
sS'cwd'
p234
S'/Users/rap2623/Dropbox/code/liquid'
p235
sS'expt_title'
p236
S'tampico_probabilistic'
p237
s.