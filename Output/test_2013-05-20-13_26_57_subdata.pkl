(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S360.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W18.50ML\x03'
p18
sS'1RAT'
p19
S'\x0201S360.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200SI0.000W0.000ML\x03'
p43
aS'\x0201SI0.500W18.50ML\x03'
p44
asssS'simulated_response'
p45
I00
sS'script'
p46
(lp47
S'"""\n'
p48
aS'deliver juice\n'
p49
aS'"""\n'
p50
aS'\n'
p51
aS'import numpy as N\n'
p52
aS'import syringe_pump\n'
p53
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p54
aS'import os\n'
p55
aS'import socket\n'
p56
aS'from socket import gethostname\n'
p57
aS'import inspect\n'
p58
aS'import exptutils\n'
p59
aS'from exptutils import *\n'
p60
ag51
aS'import datetime\n'
p61
ag51
aS'def store_scriptfile():\n'
p62
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p63
aS'    f=open(scriptfile)\n'
p64
aS'    script=f.readlines()\n'
p65
aS'    f.close()\n'
p66
aS'    return script\n'
p67
ag51
aS'def check_for_quit(subdata,win):\n'
p68
aS'    k=event.getKeys()\n'
p69
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p70
aS"    print 'found:',k\n"
p71
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p72
aS"        print 'quit key pressed'\n"
p73
aS'        return True\n'
p74
aS'    else:\n'
p75
aS'        return False\n'
p76
ag51
aS'def wait_for_trigger():\n'
p77
aS'    event.clearEvents()\n'
p78
aS"    if subdata['simulated_response']:\n"
p79
aS'        msg="SIMULATION MODE"\n'
p80
aS'    else:\n'
p81
aS"        msg=''\n"
p82
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p83
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p84
aS"    alignHoriz='center',wrapWidth=50)\n"
p85
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p86
aS'    win.flip()\n'
p87
aS'    start=False\n'
p88
aS'    while start==False:\n'
p89
aS'        k=event.waitKeys()\n'
p90
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p91
aS'            start=True\n'
p92
aS"            message.setText('')#this clears the screen\n"
p93
aS'            win.flip()\n'
p94
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p95
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p96
aS'            return False\n'
p97
aS'    return True\n'
p98
ag51
aS'subdata={}\n'
p99
aS"subdata['subcode']='test'\n"
p100
aS'# initialize subdata dictionary to store info about the study\n'
p101
aS"subdata['completed']=0\n"
p102
aS"subdata['cwd']=os.getcwd()\n"
p103
aS"subdata['hostname']=socket.gethostname()\n"
p104
aS'clock=core.Clock()\n'
p105
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p106
aS"subdata['datestamp']=datestamp\n"
p107
aS"subdata['expt_title']='tampico_probabilistic'\n"
p108
aS"subdata['script']=store_scriptfile()\n"
p109
aS"subdata['response']={}\n"
p110
aS"subdata['score']={}\n"
p111
aS"subdata['rt']={}\n"
p112
aS"subdata['stim_onset_time']={}\n"
p113
aS"subdata['stim_log']={}\n"
p114
aS"subdata['is_this_SS_trial']={}\n"
p115
aS"subdata['SS']={}\n"
p116
aS"subdata['broke_on_trial']={}\n"
p117
ag51
aS"subdata['start_key']='5'\n"
p118
aS"subdata['quit_key']='q'\n"
p119
ag51
aS"subdata['simulated_response']=False\n"
p120
ag51
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p121
aS'logging.console.setLevel(logging.INFO)\n'
p122
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p123
ag51
ag51
aS'try:\n'
p124
aS"    print 'initializing serial device:'\n"
p125
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p126
aS'    print dev\n'
p127
aS"    print 'using serial device: ', dev\n"
p128
aS'    if not dev.isOpen():\n'
p129
aS"        raise Exception('noPump')\n"
p130
aS'    hasPump=True\n'
p131
aS'except:\n'
p132
aS'    hasPump=False\n'
p133
ag51
ag51
aS'#from new_era import PumpInterface\n'
p134
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p135
ag51
aS'# deliver 0.5 ml over 5 seconds\n'
p136
aS'# equates to\n'
p137
ag51
aS'diameter=26.59\n'
p138
aS'mls_to_deliver=0.5\n'
p139
aS'delivery_time=5.0\n'
p140
aS'cue_time=3.0\n'
p141
aS'rate = 0.5*(3600.0/5.0)  # mls/hour\n'
p142
ag51
aS"trialcond=N.zeros(24).astype('int')\n"
p143
ag51
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p144
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p145
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p146
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p147
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p148
aS'ntrials=len(trialcond)\n'
p149
aS'pump=N.zeros(ntrials)\n'
p150
ag51
aS'N.random.shuffle(trialcond)\n'
p151
ag51
aS'# pump zero is neutral, pump 1 is juice\n'
p152
ag51
aS'pump[trialcond==1]=1\n'
p153
aS'pump[trialcond==2]=1\n'
p154
ag51
aS'trial_length=10.0\n'
p155
ag51
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p156
ag51
ag51
aS'# clear infusion measurements\n'
p157
aS'if hasPump:\n'
p158
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p159
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p160
ag51
aS'    dev.setBaudrate(9600)\n'
p161
ag51
aS'    for cmd in commands_to_send:\n'
p162
aS"        print 'sending: ',cmd\n"
p163
aS'        dev.sendCmd(cmd)\n'
p164
aS'        core.wait(0.1)\n'
p165
ag51
aS"    subdata['pumpdata']={}\n"
p166
aS'    for p in [0,1]:\n'
p167
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p168
aS"            fullcmd='%d%s'%(p,cmd)\n"
p169
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p170
aS'            core.wait(0.1)\n'
p171
ag51
aS"    print subdata['pumpdata']\n"
p172
ag51
aS'# setup screen\n'
p173
ag51
aS'fullscr=False\n'
p174
ag51
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p175
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p176
ag51
aS'event.clearEvents()\n'
p177
aS'wt=wait_for_trigger()\n'
p178
aS'if not wt:\n'
p179
aS"    print 'quit button pressed!'\n"
p180
aS'    sys.exit()\n'
p181
aS'else:\n'
p182
aS'    print "quit status:",wt\n'
p183
aS'    \n'
p184
aS"message=visual.TextStim(win, text='')\n"
p185
ag51
aS"subdata['trialdata']={}\n"
p186
aS'clock.reset()\n'
p187
aS'event.clearEvents()\n'
p188
ag51
aS'for trial in range(ntrials):\n'
p189
aS'    if check_for_quit(subdata,win):\n'
p190
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p191
aS'        sys.exit()\n'
p192
ag51
aS'    trialdata={}\n'
p193
aS"    print 'trial %d'%trial\n"
p194
aS"    trialdata['onset']=onsets[trial]\n"
p195
aS"    print 'condition %d'%trialcond[trial]\n"
p196
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p197
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p198
aS'    visual_stim.draw()\n'
p199
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p200
aS'        if check_for_quit(subdata,win):\n'
p201
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p202
aS'            sys.exit()\n'
p203
aS'    win.flip()\n'
p204
ag51
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p205
aS'        pass\n'
p206
ag51
aS'    if hasPump:\n'
p207
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p208
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p209
aS'    else:\n'
p210
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p211
ag51
aS'    message.draw()\n'
p212
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p213
aS'        pass\n'
p214
aS'    win.flip()\n'
p215
aS'    if hasPump:\n'
p216
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p217
aS"    subdata['trialdata'][trial]=trialdata           \n"
p218
ag51
aS'win.close()\n'
p219
ag51
aS"#print dev.sendCmd('VER')\n"
p220
asS'SS'
p221
(dp222
sS'pumpver'
p223
S''
p224
sS'completed'
p225
I0
sS'hostname'
p226
S'IRC-arizona'
p227
sS'quit_key'
p228
S'q'
p229
sS'stim_onset_time'
p230
(dp231
sS'response'
p232
(dp233
sS'is_this_SS_trial'
p234
(dp235
sS'subcode'
p236
S'test'
p237
sS'score'
p238
(dp239
sS'broke_on_trial'
p240
(dp241
sS'datestamp'
p242
S'2013-05-20-13_26_57'
p243
sS'start_key'
p244
S'5'
p245
sS'cwd'
p246
S'/Users/rap2623/Dropbox/code/liquid'
p247
sS'expt_title'
p248
S'tampico_probabilistic'
p249
s.