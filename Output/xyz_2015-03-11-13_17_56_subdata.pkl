(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200II0.491W0.000ML\x03'
p43
aS'\x0201SI0.000W0.000ML\x03'
p44
assI1
(dp45
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00$@'
p46
tp47
Rp48
sg41
(lp49
S'\x0200II1.492W0.000ML\x03'
p50
aS'\x0201SI0.000W0.000ML\x03'
p51
assI2
(dp52
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x004@'
p53
tp54
Rp55
sg41
(lp56
S'\x0200SI2.000W0.000ML\x03'
p57
aS'\x0201SI0.500W0.000ML\x03'
p58
asssS'simulated_response'
p59
I00
sS'script'
p60
(lp61
S'"""\n'
p62
aS'deliver juice\n'
p63
aS'"""\n'
p64
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p65
aS'import psychopy.app\n'
p66
aS'import numpy as N\n'
p67
aS'import sys,os,pickle\n'
p68
aS'################################################\n'
p69
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p70
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p71
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p72
aS'import cv2\n'
p73
aS'import syringe_pump\n'
p74
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p75
aS'\n'
p76
aS'import socket\n'
p77
aS'from socket import gethostname\n'
p78
aS'import inspect\n'
p79
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p80
ag76
aS'import exptutils\n'
p81
aS'from exptutils import *\n'
p82
ag76
aS'import datetime\n'
p83
ag76
aS'def store_scriptfile():\n'
p84
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p85
aS'    f=open(scriptfile)\n'
p86
aS'    script=f.readlines()\n'
p87
aS'    f.close()\n'
p88
aS'    return script\n'
p89
ag76
aS'def check_for_quit(subdata,win):\n'
p90
aS'    k=event.getKeys()\n'
p91
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p92
aS"    print 'found:',k\n"
p93
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p94
aS"        print 'quit key pressed'\n"
p95
aS'        return True\n'
p96
aS'    else:\n'
p97
aS'        return False\n'
p98
ag76
aS'def wait_for_trigger():\n'
p99
aS'    event.clearEvents()\n'
p100
aS"    if subdata['simulated_response']:\n"
p101
aS'        msg="SIMULATION MODE"\n'
p102
aS'    else:\n'
p103
aS"        msg=''\n"
p104
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p105
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p106
aS"    alignHoriz='center',wrapWidth=50)\n"
p107
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p108
aS'    win.flip()\n'
p109
aS'    start=False\n'
p110
aS'    while start==False:\n'
p111
aS'        k=event.waitKeys()\n'
p112
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p113
aS'            start=True\n'
p114
aS"            message.setText('')#this clears the screen\n"
p115
aS'            win.flip()\n'
p116
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p117
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p118
aS'            return False\n'
p119
aS'    return True\n'
p120
ag76
aS'subdata={}\n'
p121
aS"#subdata['subcode']='test'\n"
p122
aS"subdata['subcode']=raw_input('subject id: ')\n"
p123
ag76
aS'# initialize subdata dictionary to store info about the study\n'
p124
aS"subdata['completed']=0\n"
p125
aS"subdata['cwd']=os.getcwd()\n"
p126
aS"subdata['hostname']=socket.gethostname()\n"
p127
aS'clock=core.Clock()\n'
p128
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p129
aS"subdata['datestamp']=datestamp\n"
p130
aS"subdata['expt_title']='tampico_probabilistic'\n"
p131
aS"subdata['script']=store_scriptfile()\n"
p132
aS"subdata['response']={}\n"
p133
aS"subdata['score']={}\n"
p134
aS"subdata['rt']={}\n"
p135
aS"subdata['stim_onset_time']={}\n"
p136
aS"subdata['stim_log']={}\n"
p137
aS"subdata['is_this_SS_trial']={}\n"
p138
aS"subdata['SS']={}\n"
p139
aS"subdata['broke_on_trial']={}\n"
p140
ag76
aS"subdata['start_key']='5'\n"
p141
aS"subdata['quit_key']='q'\n"
p142
ag76
aS"subdata['simulated_response']=False\n"
p143
ag76
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p144
aS'logging.console.setLevel(logging.INFO)\n'
p145
aS'logfile=logging.LogFile(dataFileName,level=logging.EXP)\n'
p146
ag76
ag76
aS'try:\n'
p147
aS"    print 'initializing serial device:'\n"
p148
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p149
aS'    print dev\n'
p150
aS"    print 'using serial device: ', dev\n"
p151
aS'    if not dev.isOpen():\n'
p152
aS"        raise Exception('noPump')\n"
p153
aS'    hasPump=True\n'
p154
aS'except:\n'
p155
aS'    hasPump=False\n'
p156
ag76
ag76
aS'#from new_era import PumpInterface\n'
p157
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p158
ag76
aS'# deliver 0.5 ml over 5 seconds\n'
p159
aS'# equates to\n'
p160
ag76
aS'diameter=26.59\n'
p161
aS'mls_to_deliver=0.5\n'
p162
aS'delivery_time=2.0\n'
p163
aS'cue_time=2.0\n'
p164
aS'wait_time=2.0\n'
p165
aS'rinse_time=2.0\n'
p166
aS'swallow_time=2.0\n'
p167
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p168
ag76
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p169
ag76
aS"trialcond=N.zeros(24).astype('int')\n"
p170
ag76
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p171
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p172
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p173
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p174
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p175
aS'ntrials=len(trialcond)\n'
p176
aS'pump=N.zeros(ntrials)\n'
p177
ag76
aS'N.random.shuffle(trialcond)\n'
p178
ag76
aS'# pump zero is neutral, pump 1 is juice\n'
p179
ag76
aS'pump[trialcond==1]=1\n'
p180
aS'pump[trialcond==2]=1\n'
p181
ag76
ag76
ag76
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p182
ag76
ag76
aS'# clear infusion measurements\n'
p183
aS'if hasPump:\n'
p184
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p185
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p186
ag76
aS'    dev.setBaudrate(9600)\n'
p187
ag76
aS'    for cmd in commands_to_send:\n'
p188
aS"        print 'sending: ',cmd\n"
p189
aS'        dev.sendCmd(cmd)\n'
p190
aS'        core.wait(0.1)\n'
p191
ag76
aS"    subdata['pumpdata']={}\n"
p192
aS'    for p in [0,1]:\n'
p193
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p194
aS"            fullcmd='%d%s'%(p,cmd)\n"
p195
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p196
aS'            core.wait(0.1)\n'
p197
ag76
aS"    print subdata['pumpdata']\n"
p198
ag76
aS'# setup screen\n'
p199
ag76
aS'fullscr=False\n'
p200
ag76
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p201
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p202
ag76
aS'event.clearEvents()\n'
p203
aS'wt=wait_for_trigger()\n'
p204
aS'if not wt:\n'
p205
aS"    print 'quit button pressed!'\n"
p206
aS'    sys.exit()\n'
p207
aS'else:\n'
p208
aS'    print "quit status:",wt\n'
p209
aS'    \n'
p210
aS"message=visual.TextStim(win, text='')\n"
p211
ag76
aS"subdata['trialdata']={}\n"
p212
aS'clock.reset()\n'
p213
aS'event.clearEvents()\n'
p214
ag76
aS'for trial in range(ntrials):\n'
p215
aS'    if check_for_quit(subdata,win):\n'
p216
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p217
aS'        sys.exit()\n'
p218
ag76
aS'    trialdata={}\n'
p219
aS"    print 'trial %d'%trial\n"
p220
aS"    trialdata['onset']=onsets[trial]\n"
p221
aS"    print 'condition %d'%trialcond[trial]\n"
p222
aS'    logging.log(logging.DATA,"Condition: %d"%trialcond[trial])\n'
p223
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p224
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p225
aS'    visual_stim.draw()\n'
p226
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p227
aS'        if check_for_quit(subdata,win):\n'
p228
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p229
aS'            sys.exit()\n'
p230
aS'    win.flip()\n'
p231
ag76
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p232
aS'        pass\n'
p233
ag76
aS'    if hasPump:\n'
p234
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p235
aS'        logging.log(logging.DATA,"injecting via pump at address %d"%pump[trial])\n'
p236
ag76
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p237
aS'    else:\n'
p238
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p239
ag76
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p240
aS'        pass\n'
p241
aS"    message=visual.TextStim(win, text='')\n"
p242
aS'    message.draw()\n'
p243
aS'    win.flip()\n'
p244
aS'    if hasPump:\n'
p245
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p246
ag76
ag76
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p247
aS'        pass\n'
p248
ag76
aS'    if hasPump:\n'
p249
aS"        print 'injecting rinse via pump at address %d'%0\n"
p250
aS"        dev.sendCmd('%dRUN'%0)\n"
p251
aS'    else:\n'
p252
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p253
ag76
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p254
aS'        pass\n'
p255
ag76
aS"    message=visual.TextStim(win, text='swallow')\n"
p256
aS'    message.draw()\n'
p257
aS'    win.flip()\n'
p258
ag76
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p259
aS'        pass\n'
p260
aS"    message=visual.TextStim(win, text='')\n"
p261
aS'    message.draw()\n'
p262
aS'    win.flip()\n'
p263
ag76
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p264
aS'        pass\n'
p265
ag76
aS"    subdata['trialdata'][trial]=trialdata           \n"
p266
ag76
aS'win.close()\n'
p267
ag76
aS"#print dev.sendCmd('VER')\n"
p268
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p269
aS'pickle.dump(subdata,f)\n'
p270
aS'f.close()\n'
p271
asS'SS'
p272
(dp273
sS'pumpver'
p274
S''
p275
sS'completed'
p276
I0
sS'hostname'
p277
S'wireless-10-145-25-130.public.utexas.edu'
p278
sS'quit_key'
p279
S'q'
p280
sS'stim_onset_time'
p281
(dp282
sS'response'
p283
(dp284
sS'is_this_SS_trial'
p285
(dp286
sS'subcode'
p287
S'xyz'
p288
sS'score'
p289
(dp290
sS'broke_on_trial'
p291
(dp292
sS'datestamp'
p293
S'2015-03-11-13_17_56'
p294
sS'start_key'
p295
S'5'
p296
sS'cwd'
p297
S'/Users/imagining/Desktop/liquid_working'
p298
sS'expt_title'
p299
S'tampico_probabilistic'
p300
s.