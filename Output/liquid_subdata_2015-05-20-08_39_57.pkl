(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S'\x0201S26.59\x03'
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
S'\x0201S0.500ML\x03'
p14
sS'1DIR'
p15
S'\x0201SINF\x03'
p16
sS'1DIS'
p17
S'\x0201SI0.000W0.000ML\x03'
p18
sS'1RAT'
p19
S'\x0201S900.0MH\x03'
p20
sS'0DIA'
p21
S'\x0200S26.59\x03'
p22
sS'0VOL'
p23
S'\x0200S0.500ML\x03'
p24
ssS'stim_log'
p25
(dp26
sS'trialdata'
p27
(dp28
I0
(dp29
S'onset'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
p33
I0
I1
tp34
Rp35
(I3
S'<'
p36
NNNI-1
I-1
I0
tp37
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p38
tp39
Rp40
sS'dis'
p41
(lp42
S'\x0200II0.483W0.000ML\x03'
p43
aS'\x0201SI0.000W0.000ML\x03'
p44
assI1
(dp45
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00$@'
p46
tp47
Rp48
sg41
(lp49
S'\x0200II1.485W0.000ML\x03'
p50
aS'\x0201SI0.000W0.000ML\x03'
p51
assI2
(dp52
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x004@'
p53
tp54
Rp55
sg41
(lp56
S'\x0200SI2.000W0.000ML\x03'
p57
aS'\x0201SI0.500W0.000ML\x03'
p58
assI3
(dp59
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00>@'
p60
tp61
Rp62
sg41
(lp63
S'\x0200II2.985W0.000ML\x03'
p64
aS'\x0201SI0.500W0.000ML\x03'
p65
assI4
(dp66
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00D@'
p67
tp68
Rp69
sg41
(lp70
S'\x0200II3.987W0.000ML\x03'
p71
aS'\x0201SI0.500W0.000ML\x03'
p72
assI5
(dp73
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00I@'
p74
tp75
Rp76
sg41
(lp77
S'\x0200SI4.501W0.000ML\x03'
p78
aS'\x0201SI1.000W0.000ML\x03'
p79
assI6
(dp80
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00N@'
p81
tp82
Rp83
sg41
(lp84
S'\x0200SI5.001W0.000ML\x03'
p85
aS'\x0201SI1.500W0.000ML\x03'
p86
assI7
(dp87
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80Q@'
p88
tp89
Rp90
sg41
(lp91
S''
p92
ag92
assI8
(dp93
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00T@'
p94
tp95
Rp96
sg41
(lp97
g92
ag92
assI9
(dp98
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80V@'
p99
tp100
Rp101
sg41
(lp102
g92
ag92
assI10
(dp103
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00Y@'
p104
tp105
Rp106
sg41
(lp107
g92
ag92
assI11
(dp108
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80[@'
p109
tp110
Rp111
sg41
(lp112
g92
ag92
assI12
(dp113
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00^@'
p114
tp115
Rp116
sg41
(lp117
g92
ag92
assI13
(dp118
g30
g31
(g35
S'\x00\x00\x00\x00\x00@`@'
p119
tp120
Rp121
sg41
(lp122
g92
ag92
assI14
(dp123
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80a@'
p124
tp125
Rp126
sg41
(lp127
g92
ag92
assI15
(dp128
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0b@'
p129
tp130
Rp131
sg41
(lp132
S'\x0200A?R\x03'
p133
aS'\x0201SI0.000W0.000ML\x03'
p134
assI16
(dp135
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00d@'
p136
tp137
Rp138
sg41
(lp139
g92
ag92
assI17
(dp140
g30
g31
(g35
S'\x00\x00\x00\x00\x00@e@'
p141
tp142
Rp143
sg41
(lp144
g92
ag92
assI18
(dp145
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80f@'
p146
tp147
Rp148
sg41
(lp149
g92
ag92
assI19
(dp150
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0g@'
p151
tp152
Rp153
sg41
(lp154
g92
ag92
assI20
(dp155
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x00i@'
p156
tp157
Rp158
sg41
(lp159
g92
ag92
assI21
(dp160
g30
g31
(g35
S'\x00\x00\x00\x00\x00@j@'
p161
tp162
Rp163
sg41
(lp164
g92
ag92
assI22
(dp165
g30
g31
(g35
S'\x00\x00\x00\x00\x00\x80k@'
p166
tp167
Rp168
sg41
(lp169
g92
ag92
assI23
(dp170
g30
g31
(g35
S'\x00\x00\x00\x00\x00\xc0l@'
p171
tp172
Rp173
sg41
(lp174
g92
ag92
asssS'simulated_response'
p175
I00
sS'script'
p176
(lp177
S'"""\n'
p178
aS'deliver juice\n'
p179
aS'"""\n'
p180
aS'#####to run, in shell window <execfile("liquid2.py"), it initially doesn\'t work run via gui, then close and run cmdline#####\n'
p181
aS'import psychopy.app\n'
p182
aS'import numpy as N\n'
p183
aS'import sys,os,pickle\n'
p184
aS'################################################\n'
p185
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p186
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p187
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p188
aS'import cv2\n'
p189
aS'import syringe_pump\n'
p190
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p191
aS'\n'
p192
aS'import socket\n'
p193
aS'from socket import gethostname\n'
p194
aS'import inspect\n'
p195
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p196
ag192
aS'import exptutils\n'
p197
aS'from exptutils import *\n'
p198
ag192
aS'import datetime\n'
p199
ag192
aS'def store_scriptfile():\n'
p200
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p201
aS'    f=open(scriptfile)\n'
p202
aS'    script=f.readlines()\n'
p203
aS'    f.close()\n'
p204
aS'    return script\n'
p205
ag192
aS'def check_for_quit(subdata,win):\n'
p206
aS'    k=event.getKeys()\n'
p207
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p208
aS"    print 'found:',k\n"
p209
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p210
aS"        print 'quit key pressed'\n"
p211
aS'        return True\n'
p212
aS'    else:\n'
p213
aS'        return False\n'
p214
ag192
aS'def wait_for_trigger():\n'
p215
aS'    event.clearEvents()\n'
p216
aS"    if subdata['simulated_response']:\n"
p217
aS'        msg="SIMULATION MODE"\n'
p218
aS'    else:\n'
p219
aS"        msg=''\n"
p220
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p221
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p222
aS"    alignHoriz='center',wrapWidth=50)\n"
p223
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p224
aS'    win.flip()\n'
p225
aS'    start=False\n'
p226
aS'    while start==False:\n'
p227
aS'        k=event.waitKeys()\n'
p228
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p229
aS'            start=True\n'
p230
aS"            message.setText('')#this clears the screen\n"
p231
aS'            win.flip()\n'
p232
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p233
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p234
aS'            return False\n'
p235
aS'    return True\n'
p236
ag192
aS'subdata={}\n'
p237
aS"#subdata['subcode']='test'\n"
p238
aS"subdata['subcode']=raw_input('subject id: ')\n"
p239
ag192
aS'# initialize subdata dictionary to store info about the study\n'
p240
aS"subdata['completed']=0\n"
p241
aS"subdata['cwd']=os.getcwd()\n"
p242
aS"subdata['hostname']=socket.gethostname()\n"
p243
aS'clock=core.Clock()\n'
p244
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p245
aS"subdata['datestamp']=datestamp\n"
p246
aS"subdata['expt_title']='tampico_probabilistic'\n"
p247
aS"subdata['script']=store_scriptfile()\n"
p248
aS"subdata['response']={}\n"
p249
aS"subdata['score']={}\n"
p250
aS"subdata['rt']={}\n"
p251
aS"subdata['stim_onset_time']={}\n"
p252
aS"subdata['stim_log']={}\n"
p253
aS"subdata['is_this_SS_trial']={}\n"
p254
aS"subdata['SS']={}\n"
p255
aS"subdata['broke_on_trial']={}\n"
p256
ag192
aS"subdata['start_key']='5'\n"
p257
aS"subdata['quit_key']='q'\n"
p258
ag192
aS"subdata['simulated_response']=False\n"
p259
ag192
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p260
aS'logging.console.setLevel(logging.INFO)\n'
p261
aS'logfile=logging.LogFile(dataFileName,level=logging.DATA)\n'
p262
ag192
ag192
aS'try:\n'
p263
aS"    print 'initializing serial device:'\n"
p264
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p265
aS'    print dev\n'
p266
aS"    print 'using serial device: ', dev\n"
p267
aS'    if not dev.isOpen():\n'
p268
aS"        raise Exception('noPump')\n"
p269
aS'    hasPump=True\n'
p270
aS'except:\n'
p271
aS'    hasPump=False\n'
p272
ag192
ag192
aS'#from new_era import PumpInterface\n'
p273
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p274
ag192
aS'# deliver 0.5 ml over 5 seconds\n'
p275
aS'# equates to\n'
p276
ag192
aS'diameter=26.59\n'
p277
aS'mls_to_deliver=0.5\n'
p278
aS'delivery_time=2.0\n'
p279
aS'cue_time=2.0\n'
p280
aS'wait_time=2.0\n'
p281
aS'rinse_time=2.0\n'
p282
aS'swallow_time=2.0\n'
p283
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p284
ag192
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p285
ag192
aS"trialcond=N.zeros(24).astype('int')\n"
p286
ag192
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p287
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p288
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p289
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p290
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p291
aS'ntrials=len(trialcond)\n'
p292
aS'pump=N.zeros(ntrials)\n'
p293
ag192
aS'N.random.shuffle(trialcond)\n'
p294
ag192
aS'# pump zero is neutral, pump 1 is juice\n'
p295
ag192
aS'pump[trialcond==1]=1\n'
p296
aS'pump[trialcond==2]=1\n'
p297
ag192
ag192
ag192
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p298
ag192
ag192
aS'# clear infusion measurements\n'
p299
aS'if hasPump:\n'
p300
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p301
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p302
ag192
aS'    dev.setBaudrate(9600)\n'
p303
ag192
aS'    for cmd in commands_to_send:\n'
p304
aS"        print 'sending: ',cmd\n"
p305
aS'        dev.sendCmd(cmd)\n'
p306
aS'        core.wait(0.1)\n'
p307
ag192
aS"    subdata['pumpdata']={}\n"
p308
aS'    for p in [0,1]:\n'
p309
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p310
aS"            fullcmd='%d%s'%(p,cmd)\n"
p311
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p312
aS'            core.wait(0.1)\n'
p313
ag192
aS"    print subdata['pumpdata']\n"
p314
ag192
aS'# setup screen\n'
p315
ag192
aS'fullscr=False\n'
p316
ag192
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p317
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p318
ag192
aS'event.clearEvents()\n'
p319
aS'wt=wait_for_trigger()\n'
p320
aS'if not wt:\n'
p321
aS"    print 'quit button pressed!'\n"
p322
aS'    sys.exit()\n'
p323
aS'else:\n'
p324
aS'    print "quit status:",wt\n'
p325
aS'    \n'
p326
aS"message=visual.TextStim(win, text='')\n"
p327
ag192
aS"subdata['trialdata']={}\n"
p328
aS'clock.reset()\n'
p329
aS'event.clearEvents()\n'
p330
ag192
aS'for trial in range(ntrials):\n'
p331
aS'    if check_for_quit(subdata,win):\n'
p332
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p333
aS'        sys.exit()\n'
p334
ag192
aS'    trialdata={}\n'
p335
aS"    print 'trial %d'%trial\n"
p336
aS"    trialdata['onset']=onsets[trial]\n"
p337
aS"    print 'condition %d'%trialcond[trial]\n"
p338
aS'    logging.log(logging.DATA,"Condition: %d"%trialcond[trial])\n'
p339
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p340
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p341
aS'    visual_stim.draw()\n'
p342
aS'    logging.log(logging.DATA, "image=%s"%stim_images[trialcond[trial]])\n'
p343
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p344
aS'        if check_for_quit(subdata,win):\n'
p345
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p346
aS'            sys.exit()\n'
p347
aS'    win.flip()\n'
p348
ag192
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p349
aS'        pass\n'
p350
ag192
aS'    if hasPump:\n'
p351
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p352
aS'        logging.log(logging.DATA,"injecting via pump at address %d"%pump[trial])\n'
p353
ag192
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p354
aS'    else:\n'
p355
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p356
ag192
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p357
aS'        pass\n'
p358
aS"    message=visual.TextStim(win, text='')\n"
p359
aS'    message.draw()\n'
p360
aS'    win.flip()\n'
p361
aS'    if hasPump:\n'
p362
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p363
ag192
ag192
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p364
aS'        pass\n'
p365
ag192
aS'    if hasPump:\n'
p366
aS"        print 'injecting rinse via pump at address %d'%0\n"
p367
aS"        dev.sendCmd('%dRUN'%0)\n"
p368
aS'    else:\n'
p369
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p370
ag192
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p371
aS'        pass\n'
p372
ag192
aS"    message=visual.TextStim(win, text='swallow')\n"
p373
aS'    message.draw()\n'
p374
aS'    win.flip()\n'
p375
ag192
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p376
aS'        pass\n'
p377
aS"    message=visual.TextStim(win, text='')\n"
p378
aS'    message.draw()\n'
p379
aS'    win.flip()\n'
p380
ag192
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p381
aS'        pass\n'
p382
ag192
aS"    subdata['trialdata'][trial]=trialdata           \n"
p383
ag192
aS'win.close()\n'
p384
ag192
aS"#print dev.sendCmd('VER')\n"
p385
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p386
aS'pickle.dump(subdata,f)\n'
p387
aS'f.close()\n'
p388
asS'SS'
p389
(dp390
sS'pumpver'
p391
g92
sS'completed'
p392
I0
sS'hostname'
p393
S'wireless-10-145-43-249.public.utexas.edu'
p394
sS'quit_key'
p395
S'q'
p396
sS'stim_onset_time'
p397
(dp398
sS'response'
p399
(dp400
sS'is_this_SS_trial'
p401
(dp402
sS'subcode'
p403
S'sb_0058'
p404
sS'score'
p405
(dp406
sS'broke_on_trial'
p407
(dp408
sS'datestamp'
p409
S'2015-05-20-08_39_57'
p410
sS'start_key'
p411
S'5'
p412
sS'cwd'
p413
S'/Users/imagining/Desktop/liquid_working'
p414
sS'expt_title'
p415
S'tampico_probabilistic'
p416
s.