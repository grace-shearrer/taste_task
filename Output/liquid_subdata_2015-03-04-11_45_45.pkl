(dp0
S'rt'
p1
(dp2
sS'pumpdata'
p3
(dp4
S'1DIA'
p5
S''
p6
sS'0RAT'
p7
S'\x0200S900.0MH\x03'
p8
sS'0DIS'
p9
S'\x0200SI0.000W0.000ML\x03'
p10
sS'0DIR'
p11
S'\x0200SINF\x03'
p12
sS'1VOL'
p13
g6
sS'1DIR'
p14
g6
sS'1DIS'
p15
g6
sS'1RAT'
p16
g6
sS'0DIA'
p17
S'\x0200S26.59\x03'
p18
sS'0VOL'
p19
S'\x0200S0.500ML\x03'
p20
ssS'stim_log'
p21
(dp22
sS'trialdata'
p23
(dp24
I0
(dp25
S'onset'
p26
cnumpy.core.multiarray
scalar
p27
(cnumpy
dtype
p28
(S'f8'
p29
I0
I1
tp30
Rp31
(I3
S'<'
p32
NNNI-1
I-1
I0
tp33
bS'\x00\x00\x00\x00\x00\x00\x00\x00'
p34
tp35
Rp36
sS'dis'
p37
(lp38
S'\x0200SI0.000W0.000ML\x03'
p39
ag6
assI1
(dp40
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00$@'
p41
tp42
Rp43
sg37
(lp44
S'\x0200SI0.500W0.000ML\x03'
p45
ag6
assI2
(dp46
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x004@'
p47
tp48
Rp49
sg37
(lp50
S'\x0200SI1.000W0.000ML\x03'
p51
ag6
assI3
(dp52
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00>@'
p53
tp54
Rp55
sg37
(lp56
S'\x0200II1.996W0.000ML\x03'
p57
ag6
assI4
(dp58
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00D@'
p59
tp60
Rp61
sg37
(lp62
S'\x0200II2.996W0.000ML\x03'
p63
ag6
assI5
(dp64
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00I@'
p65
tp66
Rp67
sg37
(lp68
S'\x0200II3.996W0.000ML\x03'
p69
ag6
assI6
(dp70
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00N@'
p71
tp72
Rp73
sg37
(lp74
S'\x0200II4.994W0.000ML\x03'
p75
ag6
assI7
(dp76
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x80Q@'
p77
tp78
Rp79
sg37
(lp80
S'\x0200II5.994W0.000ML\x03'
p81
ag6
assI8
(dp82
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00T@'
p83
tp84
Rp85
sg37
(lp86
S'\x0200SI6.501W0.000ML\x03'
p87
ag6
assI9
(dp88
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x80V@'
p89
tp90
Rp91
sg37
(lp92
S'\x0200SI7.002W0.000ML\x03'
p93
ag6
assI10
(dp94
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00Y@'
p95
tp96
Rp97
sg37
(lp98
S'\x0200II7.992W0.000ML\x03'
p99
ag6
assI11
(dp100
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x80[@'
p101
tp102
Rp103
sg37
(lp104
S'\x0200II8.993W0.000ML\x03'
p105
ag6
assI12
(dp106
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00^@'
p107
tp108
Rp109
sg37
(lp110
S'\x0200SI9.502W0.000ML\x03'
p111
ag6
assI13
(dp112
g26
g27
(g31
S'\x00\x00\x00\x00\x00@`@'
p113
tp114
Rp115
sg37
(lp116
S'\x0200II10.48W0.000ML\x03'
p117
ag6
assI14
(dp118
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x80a@'
p119
tp120
Rp121
sg37
(lp122
S'\x0200II11.49W0.000ML\x03'
p123
ag6
assI15
(dp124
g26
g27
(g31
S'\x00\x00\x00\x00\x00\xc0b@'
p125
tp126
Rp127
sg37
(lp128
S'\x0200SI12.00W0.000ML\x03'
p129
ag6
assI16
(dp130
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00d@'
p131
tp132
Rp133
sg37
(lp134
S'\x0200II12.99W0.000ML\x03'
p135
ag6
assI17
(dp136
g26
g27
(g31
S'\x00\x00\x00\x00\x00@e@'
p137
tp138
Rp139
sg37
(lp140
S'\x0200II14.00W0.000ML\x03'
p141
ag6
assI18
(dp142
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x80f@'
p143
tp144
Rp145
sg37
(lp146
S'\x0200A?S\x03'
p147
ag6
assI19
(dp148
g26
g27
(g31
S'\x00\x00\x00\x00\x00\xc0g@'
p149
tp150
Rp151
sg37
(lp152
g6
ag6
assI20
(dp153
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x00i@'
p154
tp155
Rp156
sg37
(lp157
g6
ag6
assI21
(dp158
g26
g27
(g31
S'\x00\x00\x00\x00\x00@j@'
p159
tp160
Rp161
sg37
(lp162
g6
ag6
assI22
(dp163
g26
g27
(g31
S'\x00\x00\x00\x00\x00\x80k@'
p164
tp165
Rp166
sg37
(lp167
g6
ag6
assI23
(dp168
g26
g27
(g31
S'\x00\x00\x00\x00\x00\xc0l@'
p169
tp170
Rp171
sg37
(lp172
g6
ag6
asssS'simulated_response'
p173
I00
sS'script'
p174
(lp175
S'"""\n'
p176
aS'deliver juice\n'
p177
aS'"""\n'
p178
aS'import psychopy.app\n'
p179
aS'import numpy as N\n'
p180
aS'import sys,os,pickle\n'
p181
aS'################################################\n'
p182
aS"sys.path.insert(0, '/Users/imagining/Downloads/pyserial-2.6')\n"
p183
aS"#####THIS IS IMPORTANT DON'T MESS WITH IT#######\n"
p184
aS"sys.path.append('/Users/imagining/Desktop/liquid_working')\n"
p185
aS'\n'
p186
aS'import syringe_pump\n'
p187
aS'from psychopy import visual, core, event, logging, data, misc, sound\n'
p188
ag186
aS'import socket\n'
p189
aS'from socket import gethostname\n'
p190
aS'import inspect\n'
p191
aS"sys.path.append('/Users/imagining/Desktop/liquid/psychtask')\n"
p192
ag186
aS'import exptutils\n'
p193
aS'from exptutils import *\n'
p194
ag186
aS'import datetime\n'
p195
ag186
aS'def store_scriptfile():\n'
p196
aS'    scriptfile= inspect.getfile(inspect.currentframe())# save a copy of the script in the data file\n'
p197
aS'    f=open(scriptfile)\n'
p198
aS'    script=f.readlines()\n'
p199
aS'    f.close()\n'
p200
aS'    return script\n'
p201
ag186
aS'def check_for_quit(subdata,win):\n'
p202
aS'    k=event.getKeys()\n'
p203
aS"    print 'checking for quit key %s'%subdata['quit_key']\n"
p204
aS"    print 'found:',k\n"
p205
aS"    if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p206
aS"        print 'quit key pressed'\n"
p207
aS'        return True\n'
p208
aS'    else:\n'
p209
aS'        return False\n'
p210
ag186
aS'def wait_for_trigger():\n'
p211
aS'    event.clearEvents()\n'
p212
aS"    if subdata['simulated_response']:\n"
p213
aS'        msg="SIMULATION MODE"\n'
p214
aS'    else:\n'
p215
aS"        msg=''\n"
p216
aS"    message=visual.TextStim(win, text='%s Waiting for start key (or press %s)\\nBe very still!'%(msg,subdata['start_key']),\n"
p217
aS"    font='BiauKai', height=1,color=u'white', colorSpace=u'rgb', opacity=1,depth=0.0,\n"
p218
aS"    alignHoriz='center',wrapWidth=50)\n"
p219
aS'    message.setAutoDraw(True) #automatically draw every frame\n'
p220
aS'    win.flip()\n'
p221
aS'    start=False\n'
p222
aS'    while start==False:\n'
p223
aS'        k=event.waitKeys()\n'
p224
aS"        if k.count(subdata['start_key'])>0:#as soon as subdata['start_key'] is pressed...\n"
p225
aS'            start=True\n'
p226
aS"            message.setText('')#this clears the screen\n"
p227
aS'            win.flip()\n'
p228
aS"        if k.count(subdata['quit_key']) >0:# if subdata['quit_key'] is pressed...\n"
p229
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p230
aS'            return False\n'
p231
aS'    return True\n'
p232
ag186
aS'subdata={}\n'
p233
aS"#subdata['subcode']='test'\n"
p234
aS"subdata['subcode']=raw_input('subject id: ')\n"
p235
ag186
aS'# initialize subdata dictionary to store info about the study\n'
p236
aS"subdata['completed']=0\n"
p237
aS"subdata['cwd']=os.getcwd()\n"
p238
aS"subdata['hostname']=socket.gethostname()\n"
p239
aS'clock=core.Clock()\n'
p240
aS'datestamp=datetime.datetime.now().strftime("%Y-%m-%d-%H_%M_%S")\n'
p241
aS"subdata['datestamp']=datestamp\n"
p242
aS"subdata['expt_title']='tampico_probabilistic'\n"
p243
aS"subdata['script']=store_scriptfile()\n"
p244
aS"subdata['response']={}\n"
p245
aS"subdata['score']={}\n"
p246
aS"subdata['rt']={}\n"
p247
aS"subdata['stim_onset_time']={}\n"
p248
aS"subdata['stim_log']={}\n"
p249
aS"subdata['is_this_SS_trial']={}\n"
p250
aS"subdata['SS']={}\n"
p251
aS"subdata['broke_on_trial']={}\n"
p252
ag186
aS"subdata['start_key']='5'\n"
p253
aS"subdata['quit_key']='q'\n"
p254
ag186
aS"subdata['simulated_response']=False\n"
p255
ag186
aS"dataFileName='Output/%s_%s_subdata.log'%(subdata['subcode'],subdata['datestamp'])\n"
p256
aS'logging.console.setLevel(logging.INFO)\n'
p257
aS'logfile=logging.LogFile(dataFileName,level=logging.INFO)\n'
p258
ag186
ag186
aS'try:\n'
p259
aS"    print 'initializing serial device:'\n"
p260
aS"    dev=syringe_pump.SyringePump('/dev/tty.usbserial')\n"
p261
aS'    print dev\n'
p262
aS"    print 'using serial device: ', dev\n"
p263
aS'    if not dev.isOpen():\n'
p264
aS"        raise Exception('noPump')\n"
p265
aS'    hasPump=True\n'
p266
aS'except:\n'
p267
aS'    hasPump=False\n'
p268
ag186
ag186
aS'#from new_era import PumpInterface\n'
p269
aS"#pi = PumpInterface(port='/dev/tty.usbserial')\n"
p270
ag186
aS'# deliver 0.5 ml over 5 seconds\n'
p271
aS'# equates to\n'
p272
ag186
aS'diameter=26.59\n'
p273
aS'mls_to_deliver=0.5\n'
p274
aS'delivery_time=2.0\n'
p275
aS'cue_time=2.0\n'
p276
aS'wait_time=2.0\n'
p277
aS'rinse_time=2.0\n'
p278
aS'swallow_time=2.0\n'
p279
aS'trial_length=cue_time+delivery_time+wait_time+rinse_time+swallow_time\n'
p280
ag186
aS'rate = mls_to_deliver*(3600.0/delivery_time)  # mls/hour\n'
p281
ag186
aS"trialcond=N.zeros(24).astype('int')\n"
p282
ag186
aS'trialcond[0:8]=0     # water cue, water delivery\n'
p283
aS'trialcond[8:12]=1    # water cue, juice delivery\n'
p284
aS'trialcond[12:20]=2   # juice cue, juice delivery\n'
p285
aS'trialcond[20:24]=3   # juice cue, water delivery\n'
p286
aS"stim_images=['bottled_water.jpg','bottled_water.jpg','tampico.jpg','tampico.jpg']\n"
p287
aS'ntrials=len(trialcond)\n'
p288
aS'pump=N.zeros(ntrials)\n'
p289
ag186
aS'N.random.shuffle(trialcond)\n'
p290
ag186
aS'# pump zero is neutral, pump 1 is juice\n'
p291
ag186
aS'pump[trialcond==1]=1\n'
p292
aS'pump[trialcond==2]=1\n'
p293
ag186
ag186
ag186
aS'onsets=N.arange(0,ntrials*trial_length,step=trial_length)\n'
p294
ag186
ag186
aS'# clear infusion measurements\n'
p295
aS'if hasPump:\n'
p296
aS"    commands_to_send=['0PHN01','1PHN01','0CLDINF','1CLDINF','0DIRINF','1DIRINF','0RAT%0.1fMH'%rate,'1RAT%0.1fMH'%rate,'0VOL%0.1f'%mls_to_deliver,'1VOL%0.1f'%mls_to_deliver,'0DIA%0.1fMH'%diameter,'1DIA%0.1fMH'%diameter]\n"
p297
aS"    subdata['pumpver']=dev.sendCmd('VER')\n"
p298
ag186
aS'    dev.setBaudrate(9600)\n'
p299
ag186
aS'    for cmd in commands_to_send:\n'
p300
aS"        print 'sending: ',cmd\n"
p301
aS'        dev.sendCmd(cmd)\n'
p302
aS'        core.wait(0.1)\n'
p303
ag186
aS"    subdata['pumpdata']={}\n"
p304
aS'    for p in [0,1]:\n'
p305
aS"        for cmd in ['DIS','DIR','RAT','VOL','DIA']:\n"
p306
aS"            fullcmd='%d%s'%(p,cmd)\n"
p307
aS"            subdata['pumpdata'][fullcmd]=dev.sendCmd(fullcmd)\n"
p308
aS'            core.wait(0.1)\n'
p309
ag186
aS"    print subdata['pumpdata']\n"
p310
ag186
aS'# setup screen\n'
p311
ag186
aS'fullscr=False\n'
p312
ag186
aS"win = visual.Window([800,600],allowGUI=True, fullscr=fullscr, monitor='testMonitor', units='deg')\n"
p313
aS"visual_stim=visual.ImageStim(win, image=N.zeros((300,300)), size=(0.75,0.75),units='height')\n"
p314
ag186
aS'event.clearEvents()\n'
p315
aS'wt=wait_for_trigger()\n'
p316
aS'if not wt:\n'
p317
aS"    print 'quit button pressed!'\n"
p318
aS'    sys.exit()\n'
p319
aS'else:\n'
p320
aS'    print "quit status:",wt\n'
p321
aS'    \n'
p322
aS"message=visual.TextStim(win, text='')\n"
p323
ag186
aS"subdata['trialdata']={}\n"
p324
aS'clock.reset()\n'
p325
aS'event.clearEvents()\n'
p326
ag186
aS'for trial in range(ntrials):\n'
p327
aS'    if check_for_quit(subdata,win):\n'
p328
aS'        exptutils.shut_down_cleanly(subdata,win)\n'
p329
aS'        sys.exit()\n'
p330
ag186
aS'    trialdata={}\n'
p331
aS"    print 'trial %d'%trial\n"
p332
aS"    trialdata['onset']=onsets[trial]\n"
p333
aS"    print 'condition %d'%trialcond[trial]\n"
p334
aS"    logging.log(logging.DATA,'Condition: %d'%trialcond[trial])\n"
p335
aS"    print 'showing image: %s'%stim_images[trialcond[trial]]\n"
p336
aS'    visual_stim.setImage(stim_images[trialcond[trial]])\n'
p337
aS'    visual_stim.draw()\n'
p338
aS"    while clock.getTime()<trialdata['onset']:#wait until the specified onset time to display image_file\n"
p339
aS'        if check_for_quit(subdata,win):\n'
p340
aS'            exptutils.shut_down_cleanly(subdata,win)\n'
p341
aS'            sys.exit()\n'
p342
aS'    win.flip()\n'
p343
ag186
aS"    while clock.getTime()<(trialdata['onset']+cue_time):#show the image\n"
p344
aS'        pass\n'
p345
ag186
aS'    if hasPump:\n'
p346
aS"        print 'injecting via pump at address %d'%pump[trial]\n"
p347
aS"        logging.log(logging.DATA,'injecting via pump at address %d'%pump[trial])\n"
p348
ag186
aS"        dev.sendCmd('%dRUN'%pump[trial])\n"
p349
aS'    else:\n'
p350
aS"        print 'no pump: should be injecting via pump at address %d'%pump[trial]\n"
p351
ag186
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time):#wait until liquid is delivered\n"
p352
aS'        pass\n'
p353
aS"    message=visual.TextStim(win, text='')\n"
p354
aS'    message.draw()\n'
p355
aS'    win.flip()\n'
p356
aS'    if hasPump:\n'
p357
aS"        trialdata['dis']=[dev.sendCmd('0DIS'),dev.sendCmd('1DIS')]\n"
p358
ag186
ag186
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time):\n"
p359
aS'        pass\n'
p360
ag186
aS'    if hasPump:\n'
p361
aS"        print 'injecting rinse via pump at address %d'%0\n"
p362
aS"        dev.sendCmd('%dRUN'%0)\n"
p363
aS'    else:\n'
p364
aS"        print 'no pump: should be injecting rinse via pump at address %d'%pump[trial]\n"
p365
ag186
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time):\n"
p366
aS'        pass\n'
p367
ag186
aS"    message=visual.TextStim(win, text='swallow')\n"
p368
aS'    message.draw()\n'
p369
aS'    win.flip()\n'
p370
ag186
aS"    while clock.getTime()<(trialdata['onset']+cue_time+delivery_time+wait_time+rinse_time+swallow_time):\n"
p371
aS'        pass\n'
p372
aS"    message=visual.TextStim(win, text='')\n"
p373
aS'    message.draw()\n'
p374
aS'    win.flip()\n'
p375
ag186
aS"    while clock.getTime()<(trialdata['onset']+trial_length):\n"
p376
aS'        pass\n'
p377
ag186
aS"    subdata['trialdata'][trial]=trialdata           \n"
p378
ag186
aS'win.close()\n'
p379
ag186
aS"#print dev.sendCmd('VER')\n"
p380
aS"f=open('Output/liquid_subdata_%s.pkl'%datestamp,'wb')\n"
p381
aS'pickle.dump(subdata,f)\n'
p382
aS'f.close()\n'
p383
asS'SS'
p384
(dp385
sS'pumpver'
p386
g6
sS'completed'
p387
I0
sS'hostname'
p388
S'wireless-10-145-163-72.public.utexas.edu'
p389
sS'quit_key'
p390
S'q'
p391
sS'stim_onset_time'
p392
(dp393
sS'response'
p394
(dp395
sS'is_this_SS_trial'
p396
(dp397
sS'subcode'
p398
S'testytesttest'
p399
sS'score'
p400
(dp401
sS'broke_on_trial'
p402
(dp403
sS'datestamp'
p404
S'2015-03-04-11_45_45'
p405
sS'start_key'
p406
S'5'
p407
sS'cwd'
p408
S'/Users/imagining/Desktop/liquid_working'
p409
sS'expt_title'
p410
S'tampico_probabilistic'
p411
s.